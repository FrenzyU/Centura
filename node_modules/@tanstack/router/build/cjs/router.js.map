{"version":3,"file":"router.js","sources":["../../src/router.ts"],"sourcesContent":["import { Store } from '@tanstack/store'\nimport invariant from 'tiny-invariant'\n\n//\n\nimport { GetFrameworkGeneric } from './frameworks'\n\nimport {\n  LinkInfo,\n  LinkOptions,\n  NavigateOptions,\n  ToOptions,\n  ValidFromPath,\n  ResolveRelativePath,\n} from './link'\nimport {\n  cleanPath,\n  interpolatePath,\n  joinPaths,\n  matchPathname,\n  resolvePath,\n  trimPath,\n} from './path'\nimport { AnyRoute, Route } from './route'\nimport {\n  AnyPathParams,\n  AnyRouteConfig,\n  AnySearchSchema,\n  LoaderContext,\n  RouteConfig,\n  SearchFilter,\n} from './routeConfig'\nimport {\n  AllRouteInfo,\n  AnyAllRouteInfo,\n  RouteInfo,\n  RoutesById,\n} from './routeInfo'\nimport { RouteMatch, RouteMatchStore } from './routeMatch'\nimport { defaultParseSearch, defaultStringifySearch } from './searchParams'\nimport {\n  functionalUpdate,\n  last,\n  NoInfer,\n  pick,\n  PickAsRequired,\n  PickRequired,\n  Timeout,\n  Updater,\n  replaceEqualDeep,\n} from './utils'\nimport {\n  createBrowserHistory,\n  createMemoryHistory,\n  RouterHistory,\n} from './history'\n\nexport interface RegisterRouter {\n  // router: Router\n}\n\nexport type AnyRouter = Router<any, any, any>\n\nexport type RegisteredRouter = RegisterRouter extends {\n  router: Router<infer TRouteConfig, infer TAllRouteInfo, infer TRouterContext>\n}\n  ? Router<TRouteConfig, TAllRouteInfo, TRouterContext>\n  : Router\n\nexport type RegisteredAllRouteInfo = RegisterRouter extends {\n  router: Router<infer TRouteConfig, infer TAllRouteInfo, infer TRouterContext>\n}\n  ? TAllRouteInfo\n  : AnyAllRouteInfo\n\nexport interface LocationState {}\n\nexport interface ParsedLocation<\n  TSearchObj extends AnySearchSchema = {},\n  TState extends LocationState = LocationState,\n> {\n  href: string\n  pathname: string\n  search: TSearchObj\n  searchStr: string\n  state: TState\n  hash: string\n  key?: string\n}\n\nexport interface FromLocation {\n  pathname: string\n  search?: unknown\n  key?: string\n  hash?: string\n}\n\nexport type SearchSerializer = (searchObj: Record<string, any>) => string\nexport type SearchParser = (searchStr: string) => Record<string, any>\nexport type FilterRoutesFn = <TRoute extends Route<any, RouteInfo>>(\n  routeConfigs: TRoute[],\n) => TRoute[]\n\nexport interface RouterOptions<\n  TRouteConfig extends AnyRouteConfig,\n  TRouterContext,\n> {\n  history?: RouterHistory\n  stringifySearch?: SearchSerializer\n  parseSearch?: SearchParser\n  filterRoutes?: FilterRoutesFn\n  defaultPreload?: false | 'intent'\n  defaultPreloadDelay?: number\n  defaultComponent?: GetFrameworkGeneric<'Component'>\n  defaultErrorComponent?: GetFrameworkGeneric<'ErrorComponent'>\n  defaultPendingComponent?: GetFrameworkGeneric<'Component'>\n  defaultLoaderMaxAge?: number\n  defaultLoaderGcMaxAge?: number\n  caseSensitive?: boolean\n  routeConfig?: TRouteConfig\n  basepath?: string\n  Router?: (router: AnyRouter) => void\n  createRoute?: (opts: { route: AnyRoute; router: AnyRouter }) => void\n  context?: TRouterContext\n  loadComponent?: (\n    component: GetFrameworkGeneric<'Component'>,\n  ) => Promise<GetFrameworkGeneric<'Component'>>\n  onRouteChange?: () => void\n  fetchServerDataFn?: FetchServerDataFn\n}\n\ntype FetchServerDataFn = (ctx: {\n  router: AnyRouter\n  routeMatch: RouteMatch\n}) => Promise<any>\n\nexport interface LoaderState<\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams extends AnyPathParams = {},\n> {\n  loadedAt: number\n  loaderContext: LoaderContext<TFullSearchSchema, TAllParams>\n}\n\nexport interface RouterStore<\n  TSearchObj extends AnySearchSchema = {},\n  TState extends LocationState = LocationState,\n> {\n  status: 'idle' | 'pending'\n  latestLocation: ParsedLocation<TSearchObj, TState>\n  currentMatches: RouteMatch[]\n  currentLocation: ParsedLocation<TSearchObj, TState>\n  pendingMatches?: RouteMatch[]\n  pendingLocation?: ParsedLocation<TSearchObj, TState>\n  lastUpdated: number\n}\n\nexport type ListenerFn = () => void\n\nexport interface BuildNextOptions {\n  to?: string | number | null\n  params?: true | Updater<unknown>\n  search?: true | Updater<unknown>\n  hash?: true | Updater<string>\n  state?: LocationState\n  key?: string\n  from?: string\n  fromCurrent?: boolean\n  __preSearchFilters?: SearchFilter<any>[]\n  __postSearchFilters?: SearchFilter<any>[]\n}\n\nexport type MatchCacheEntry = {\n  gc: number\n  match: RouteMatch\n}\n\nexport interface MatchLocation {\n  to?: string | number | null\n  fuzzy?: boolean\n  caseSensitive?: boolean\n  from?: string\n  fromCurrent?: boolean\n}\n\nexport interface MatchRouteOptions {\n  pending?: boolean\n  caseSensitive?: boolean\n  fuzzy?: boolean\n}\n\ntype LinkCurrentTargetElement = {\n  preloadTimeout?: null | ReturnType<typeof setTimeout>\n}\n\nexport interface DehydratedRouterState\n  extends Pick<\n    RouterStore,\n    'status' | 'latestLocation' | 'currentLocation' | 'lastUpdated'\n  > {\n  currentMatches: DehydratedRouteMatch[]\n}\n\nexport interface DehydratedRouter<TRouterContext = unknown> {\n  // location: Router['__location']\n  state: DehydratedRouterState\n  context: TRouterContext\n}\n\nexport type MatchCache = Record<string, MatchCacheEntry>\n\ninterface DehydratedRouteMatch {\n  id: string\n  state: Pick<RouteMatchStore<any, any>, 'status'>\n}\n\nexport interface RouterContext {}\n\nexport const defaultFetchServerDataFn: FetchServerDataFn = async ({\n  router,\n  routeMatch,\n}) => {\n  const next = router.buildNext({\n    to: '.',\n    search: (d: any) => ({\n      ...(d ?? {}),\n      __data: {\n        matchId: routeMatch.id,\n      },\n    }),\n  })\n\n  const res = await fetch(next.href, {\n    method: 'GET',\n    signal: routeMatch.abortController.signal,\n  })\n\n  if (res.ok) {\n    return res.json()\n  }\n\n  throw new Error('Failed to fetch match data')\n}\n\nexport class Router<\n  TRouteConfig extends AnyRouteConfig = RouteConfig,\n  TAllRouteInfo extends AnyAllRouteInfo = AllRouteInfo<TRouteConfig>,\n  TRouterContext = unknown,\n> {\n  types!: {\n    // Super secret internal stuff\n    RouteConfig: TRouteConfig\n    AllRouteInfo: TAllRouteInfo\n  }\n\n  options: PickAsRequired<\n    RouterOptions<TRouteConfig, TRouterContext>,\n    'stringifySearch' | 'parseSearch' | 'context'\n  >\n  history!: RouterHistory\n  #unsubHistory?: () => void\n  basepath: string\n  // __location: Location<TAllRouteInfo['fullSearchSchema']>\n  routeTree!: Route<TAllRouteInfo, RouteInfo>\n  routesById!: RoutesById<TAllRouteInfo>\n  navigateTimeout: undefined | Timeout\n  nextAction: undefined | 'push' | 'replace'\n  navigationPromise: undefined | Promise<void>\n\n  store: Store<RouterStore<TAllRouteInfo['fullSearchSchema']>>\n  startedLoadingAt = Date.now()\n  resolveNavigation = () => {}\n\n  constructor(options?: RouterOptions<TRouteConfig, TRouterContext>) {\n    this.options = {\n      defaultPreloadDelay: 50,\n      context: undefined!,\n      ...options,\n      stringifySearch: options?.stringifySearch ?? defaultStringifySearch,\n      parseSearch: options?.parseSearch ?? defaultParseSearch,\n      fetchServerDataFn: options?.fetchServerDataFn ?? defaultFetchServerDataFn,\n    }\n\n    this.store = new Store(getInitialRouterState())\n    this.basepath = ''\n\n    this.update(options)\n\n    // Allow frameworks to hook into the router creation\n    this.options.Router?.(this)\n  }\n\n  reset = () => {\n    this.store.setState((s) => Object.assign(s, getInitialRouterState()))\n  }\n\n  mount = () => {\n    // Mount only does anything on the client\n    if (!isServer) {\n      // If the router matches are empty, load the matches\n      if (!this.store.state.currentMatches.length) {\n        this.load()\n      }\n\n      const visibilityChangeEvent = 'visibilitychange'\n      const focusEvent = 'focus'\n\n      // addEventListener does not exist in React Native, but window does\n      // In the future, we might need to invert control here for more adapters\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (window.addEventListener) {\n        // Listen to visibilitychange and focus\n        window.addEventListener(visibilityChangeEvent, this.#onFocus, false)\n        window.addEventListener(focusEvent, this.#onFocus, false)\n      }\n\n      return () => {\n        if (window.removeEventListener) {\n          // Be sure to unsubscribe if a new handler is set\n\n          window.removeEventListener(visibilityChangeEvent, this.#onFocus)\n          window.removeEventListener(focusEvent, this.#onFocus)\n        }\n      }\n    }\n\n    return () => {}\n  }\n\n  update = <\n    TRouteConfig extends RouteConfig = RouteConfig,\n    TAllRouteInfo extends AnyAllRouteInfo = AllRouteInfo<TRouteConfig>,\n    TRouterContext = unknown,\n  >(\n    opts?: RouterOptions<TRouteConfig, TRouterContext>,\n  ): Router<TRouteConfig, TAllRouteInfo, TRouterContext> => {\n    Object.assign(this.options, opts)\n\n    if (\n      !this.history ||\n      (this.options.history && this.options.history !== this.history)\n    ) {\n      if (this.#unsubHistory) {\n        this.#unsubHistory()\n      }\n\n      this.history =\n        this.options.history ??\n        (isServer ? createMemoryHistory() : createBrowserHistory()!)\n\n      this.store.setState((s) => ({\n        ...s,\n        latestLocation: this.#parseLocation(),\n        currentLocation: s.latestLocation,\n      }))\n\n      this.#unsubHistory = this.history.listen(() => {\n        this.load(this.#parseLocation(this.store.state.latestLocation))\n      })\n    }\n\n    const { basepath, routeConfig } = this.options\n\n    this.basepath = `/${trimPath(basepath ?? '') ?? ''}`\n\n    if (routeConfig) {\n      this.routesById = {} as any\n      this.routeTree = this.#buildRouteTree(routeConfig)\n    }\n\n    return this as any\n  }\n\n  buildNext = (opts: BuildNextOptions) => {\n    const next = this.#buildLocation(opts)\n\n    const matches = this.matchRoutes(next.pathname)\n\n    const __preSearchFilters = matches\n      .map((match) => match.route.options.preSearchFilters ?? [])\n      .flat()\n      .filter(Boolean)\n\n    const __postSearchFilters = matches\n      .map((match) => match.route.options.postSearchFilters ?? [])\n      .flat()\n      .filter(Boolean)\n\n    return this.#buildLocation({\n      ...opts,\n      __preSearchFilters,\n      __postSearchFilters,\n    })\n  }\n\n  cancelMatches = () => {\n    ;[\n      ...this.store.state.currentMatches,\n      ...(this.store.state.pendingMatches || []),\n    ].forEach((match) => {\n      match.cancel()\n    })\n  }\n\n  load = async (next?: ParsedLocation) => {\n    let now = Date.now()\n    const startedAt = now\n    this.startedLoadingAt = startedAt\n\n    // Cancel any pending matches\n    this.cancelMatches()\n\n    let matches!: RouteMatch<any, any>[]\n\n    this.store.batch(() => {\n      if (next) {\n        // Ingest the new location\n        this.store.setState((s) => ({\n          ...s,\n          latestLocation: next,\n        }))\n      }\n\n      // Match the routes\n      matches = this.matchRoutes(this.store.state.latestLocation.pathname, {\n        strictParseParams: true,\n      })\n\n      this.store.setState((s) => ({\n        ...s,\n        status: 'pending',\n        pendingMatches: matches,\n        pendingLocation: this.store.state.latestLocation,\n      }))\n    })\n\n    // Load the matches\n    try {\n      await this.loadMatches(matches)\n    } catch (err: any) {\n      console.warn(err)\n      invariant(\n        false,\n        'Matches failed to load due to error above ☝️. Navigation cancelled!',\n      )\n    }\n\n    if (this.startedLoadingAt !== startedAt) {\n      // Ignore side-effects of outdated side-effects\n      return this.navigationPromise\n    }\n\n    const previousMatches = this.store.state.currentMatches\n\n    const exiting: RouteMatch[] = [],\n      staying: RouteMatch[] = []\n\n    previousMatches.forEach((d) => {\n      if (matches.find((dd) => dd.id === d.id)) {\n        staying.push(d)\n      } else {\n        exiting.push(d)\n      }\n    })\n\n    const entering = matches.filter((d) => {\n      return !previousMatches.find((dd) => dd.id === d.id)\n    })\n\n    now = Date.now()\n\n    exiting.forEach((d) => {\n      d.__onExit?.({\n        params: d.params,\n        search: d.store.state.routeSearch,\n      })\n\n      // Clear non-loading error states when match leaves\n      if (d.store.state.status === 'error') {\n        this.store.setState((s) => ({\n          ...s,\n          status: 'idle',\n          error: undefined,\n        }))\n      }\n    })\n\n    staying.forEach((d) => {\n      d.route.options.onTransition?.({\n        params: d.params,\n        search: d.store.state.routeSearch,\n      })\n    })\n\n    entering.forEach((d) => {\n      d.__onExit = d.route.options.onLoaded?.({\n        params: d.params,\n        search: d.store.state.search,\n      })\n      // delete this.store.state.matchCache[d.id] // TODO:\n    })\n\n    this.store.setState((s) => ({\n      ...s,\n      status: 'idle',\n      currentLocation: this.store.state.latestLocation,\n      currentMatches: matches,\n      pendingLocation: undefined,\n      pendingMatches: undefined,\n    }))\n\n    this.options.onRouteChange?.()\n\n    this.resolveNavigation()\n  }\n\n  getRoute = <TId extends keyof TAllRouteInfo['routeInfoById']>(\n    id: TId,\n  ): Route<TAllRouteInfo, TAllRouteInfo['routeInfoById'][TId]> => {\n    const route = this.routesById[id]\n\n    invariant(route, `Route with id \"${id as string}\" not found`)\n\n    return route\n  }\n\n  loadRoute = async (\n    navigateOpts: BuildNextOptions = this.store.state.latestLocation,\n  ): Promise<RouteMatch[]> => {\n    const next = this.buildNext(navigateOpts)\n    const matches = this.matchRoutes(next.pathname, {\n      strictParseParams: true,\n    })\n    await this.loadMatches(matches)\n    return matches\n  }\n\n  preloadRoute = async (\n    navigateOpts: BuildNextOptions = this.store.state.latestLocation,\n  ) => {\n    const next = this.buildNext(navigateOpts)\n    const matches = this.matchRoutes(next.pathname, {\n      strictParseParams: true,\n    })\n\n    await this.loadMatches(matches, {\n      preload: true,\n    })\n    return matches\n  }\n\n  matchRoutes = (pathname: string, opts?: { strictParseParams?: boolean }) => {\n    const matches: RouteMatch[] = []\n\n    if (!this.routeTree) {\n      return matches\n    }\n\n    const existingMatches = [\n      ...this.store.state.currentMatches,\n      ...(this.store.state.pendingMatches ?? []),\n    ]\n\n    const recurse = async (routes: Route<any, any>[]): Promise<void> => {\n      const parentMatch = last(matches)\n      let params = parentMatch?.params ?? {}\n\n      const filteredRoutes = this.options.filterRoutes?.(routes) ?? routes\n\n      let foundRoutes: Route[] = []\n\n      const findMatchInRoutes = (parentRoutes: Route[], routes: Route[]) => {\n        routes.some((route) => {\n          if (!route.path && route.childRoutes?.length) {\n            return findMatchInRoutes([...foundRoutes, route], route.childRoutes)\n          }\n\n          const fuzzy = !!(route.path !== '/' || route.childRoutes?.length)\n\n          const matchParams = matchPathname(this.basepath, pathname, {\n            to: route.fullPath,\n            fuzzy,\n            caseSensitive:\n              route.options.caseSensitive ?? this.options.caseSensitive,\n          })\n\n          if (matchParams) {\n            let parsedParams\n\n            try {\n              parsedParams =\n                route.options.parseParams?.(matchParams!) ?? matchParams\n            } catch (err) {\n              if (opts?.strictParseParams) {\n                throw err\n              }\n            }\n\n            params = {\n              ...params,\n              ...parsedParams,\n            }\n          }\n\n          if (!!matchParams) {\n            foundRoutes = [...parentRoutes, route]\n          }\n\n          return !!foundRoutes.length\n        })\n\n        return !!foundRoutes.length\n      }\n\n      findMatchInRoutes([], filteredRoutes)\n\n      if (!foundRoutes.length) {\n        return\n      }\n\n      foundRoutes.forEach((foundRoute) => {\n        const interpolatedPath = interpolatePath(foundRoute.path, params)\n        const matchId = interpolatePath(foundRoute.id, params, true)\n\n        const match =\n          existingMatches.find((d) => d.id === matchId) ||\n          // this.store.state.matchCache[matchId]?.match || // TODO:\n          new RouteMatch(this, foundRoute, {\n            id: matchId,\n            params,\n            pathname: joinPaths([this.basepath, interpolatedPath]),\n          })\n\n        matches.push(match)\n      })\n\n      const foundRoute = last(foundRoutes)!\n\n      if (foundRoute.childRoutes?.length) {\n        recurse(foundRoute.childRoutes)\n      }\n    }\n\n    recurse([this.routeTree])\n\n    linkMatches(matches)\n\n    return matches\n  }\n\n  loadMatches = async (\n    resolvedMatches: RouteMatch[],\n    loaderOpts?: { preload?: boolean },\n  ) => {\n    // this.cleanMatchCache()\n    resolvedMatches.forEach(async (match) => {\n      // Validate the match (loads search params etc)\n      match.__validate()\n    })\n\n    // Check each match middleware to see if the route can be accessed\n    await Promise.all(\n      resolvedMatches.map(async (match) => {\n        try {\n          await match.route.options.beforeLoad?.({\n            router: this as any,\n            match,\n          })\n        } catch (err) {\n          if (!loaderOpts?.preload) {\n            match.route.options.onLoadError?.(err)\n          }\n\n          throw err\n        }\n      }),\n    )\n\n    const matchPromises = resolvedMatches.map(async (match, index) => {\n      const prevMatch = resolvedMatches[(index = 1)]\n      const search = match.store.state.search as { __data?: any }\n\n      if (search.__data?.matchId && search.__data.matchId !== match.id) {\n        return\n      }\n\n      match.load()\n\n      if (match.store.state.status !== 'success' && match.__loadPromise) {\n        // Wait for the first sign of activity from the match\n        await match.__loadPromise\n      }\n\n      if (prevMatch) {\n        await prevMatch.__loadPromise\n      }\n    })\n\n    await Promise.all(matchPromises)\n  }\n\n  reload = () => {\n    this.navigate({\n      fromCurrent: true,\n      replace: true,\n      search: true,\n    } as any)\n  }\n\n  resolvePath = (from: string, path: string) => {\n    return resolvePath(this.basepath!, from, cleanPath(path))\n  }\n\n  navigate = async <\n    TFrom extends ValidFromPath<TAllRouteInfo> = '/',\n    TTo extends string = '.',\n  >({\n    from,\n    to = '.' as any,\n    search,\n    hash,\n    replace,\n    params,\n  }: NavigateOptions<TAllRouteInfo, TFrom, TTo>) => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n    const toString = String(to)\n    const fromString = typeof from === 'undefined' ? from : String(from)\n    let isExternal\n\n    try {\n      new URL(`${toString}`)\n      isExternal = true\n    } catch (e) {}\n\n    invariant(\n      !isExternal,\n      'Attempting to navigate to external url with this.navigate!',\n    )\n\n    return this.#commitLocation({\n      from: fromString,\n      to: toString,\n      search,\n      hash,\n      replace,\n      params,\n    })\n  }\n\n  matchRoute = <\n    TFrom extends ValidFromPath<TAllRouteInfo> = '/',\n    TTo extends string = '.',\n  >(\n    location: ToOptions<TAllRouteInfo, TFrom, TTo>,\n    opts?: MatchRouteOptions,\n  ):\n    | false\n    | TAllRouteInfo['routeInfoById'][ResolveRelativePath<\n        TFrom,\n        NoInfer<TTo>\n      >]['allParams'] => {\n    location = {\n      ...location,\n      to: location.to\n        ? this.resolvePath(location.from ?? '', location.to)\n        : undefined,\n    }\n\n    const next = this.buildNext(location)\n\n    if (opts?.pending) {\n      if (!this.store.state.pendingLocation) {\n        return false\n      }\n\n      return matchPathname(\n        this.basepath,\n        this.store.state.pendingLocation!.pathname,\n        {\n          ...opts,\n          to: next.pathname,\n        },\n      ) as any\n    }\n\n    return matchPathname(\n      this.basepath,\n      this.store.state.currentLocation.pathname,\n      {\n        ...opts,\n        to: next.pathname,\n      },\n    ) as any\n  }\n\n  buildLink = <\n    TFrom extends ValidFromPath<TAllRouteInfo> = '/',\n    TTo extends string = '.',\n  >({\n    from,\n    to = '.' as any,\n    search,\n    params,\n    hash,\n    target,\n    replace,\n    activeOptions,\n    preload,\n    preloadMaxAge: userPreloadMaxAge,\n    preloadGcMaxAge: userPreloadGcMaxAge,\n    preloadDelay: userPreloadDelay,\n    disabled,\n  }: LinkOptions<TAllRouteInfo, TFrom, TTo>): LinkInfo => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n\n    try {\n      new URL(`${to}`)\n      return {\n        type: 'external',\n        href: to,\n      }\n    } catch (e) {}\n\n    const nextOpts = {\n      from,\n      to,\n      search,\n      params,\n      hash,\n      replace,\n    }\n\n    const next = this.buildNext(nextOpts)\n\n    preload = preload ?? this.options.defaultPreload\n    const preloadDelay =\n      userPreloadDelay ?? this.options.defaultPreloadDelay ?? 0\n\n    // Compare path/hash for matches\n    const pathIsEqual =\n      this.store.state.currentLocation.pathname === next.pathname\n    const currentPathSplit =\n      this.store.state.currentLocation.pathname.split('/')\n    const nextPathSplit = next.pathname.split('/')\n    const pathIsFuzzyEqual = nextPathSplit.every(\n      (d, i) => d === currentPathSplit[i],\n    )\n    const hashIsEqual = this.store.state.currentLocation.hash === next.hash\n    // Combine the matches based on user options\n    const pathTest = activeOptions?.exact ? pathIsEqual : pathIsFuzzyEqual\n    const hashTest = activeOptions?.includeHash ? hashIsEqual : true\n\n    // The final \"active\" test\n    const isActive = pathTest && hashTest\n\n    // The click handler\n    const handleClick = (e: MouseEvent) => {\n      if (\n        !disabled &&\n        !isCtrlEvent(e) &&\n        !e.defaultPrevented &&\n        (!target || target === '_self') &&\n        e.button === 0\n      ) {\n        e.preventDefault()\n\n        // All is well? Navigate!\n        this.#commitLocation(nextOpts as any)\n      }\n    }\n\n    // The click handler\n    const handleFocus = (e: MouseEvent) => {\n      if (preload) {\n        this.preloadRoute(nextOpts).catch((err) => {\n          console.warn(err)\n          console.warn('Error preloading route! ☝️')\n        })\n      }\n    }\n\n    const handleEnter = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (preload) {\n        if (target.preloadTimeout) {\n          return\n        }\n\n        target.preloadTimeout = setTimeout(() => {\n          target.preloadTimeout = null\n          this.preloadRoute(nextOpts).catch((err) => {\n            console.warn(err)\n            console.warn('Error preloading route! ☝️')\n          })\n        }, preloadDelay)\n      }\n    }\n\n    const handleLeave = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (target.preloadTimeout) {\n        clearTimeout(target.preloadTimeout)\n        target.preloadTimeout = null\n      }\n    }\n\n    return {\n      type: 'internal',\n      next,\n      handleFocus,\n      handleClick,\n      handleEnter,\n      handleLeave,\n      isActive,\n      disabled,\n    }\n  }\n\n  dehydrate = (): DehydratedRouter<TRouterContext> => {\n    return {\n      state: {\n        ...pick(this.store.state, [\n          'latestLocation',\n          'currentLocation',\n          'status',\n          'lastUpdated',\n        ]),\n        currentMatches: this.store.state.currentMatches.map((match) => ({\n          id: match.id,\n          state: {\n            ...pick(match.store.state, ['status']),\n          },\n        })),\n      },\n      context: this.options.context as TRouterContext,\n    }\n  }\n\n  hydrate = (dehydratedRouter: DehydratedRouter<TRouterContext>) => {\n    this.store.setState((s) => {\n      this.options.context = dehydratedRouter.context\n\n      // Match the routes\n      const currentMatches = this.matchRoutes(\n        dehydratedRouter.state.latestLocation.pathname,\n        {\n          strictParseParams: true,\n        },\n      )\n\n      currentMatches.forEach((match, index) => {\n        const dehydratedMatch = dehydratedRouter.state.currentMatches[index]\n        invariant(\n          dehydratedMatch && dehydratedMatch.id === match.id,\n          'Oh no! There was a hydration mismatch when attempting to hydrate the state of the router! 😬',\n        )\n        match.store.setState((s) => ({\n          ...s,\n          ...dehydratedMatch.state,\n        }))\n      })\n\n      currentMatches.forEach((match) => match.__validate())\n\n      return {\n        ...s,\n        ...dehydratedRouter.state,\n        currentMatches,\n      }\n    })\n  }\n\n  #buildRouteTree = (rootRouteConfig: RouteConfig) => {\n    const recurseRoutes = (\n      routeConfigs: RouteConfig[],\n      parent?: Route<TAllRouteInfo, any, any>,\n    ): Route<TAllRouteInfo, any, any>[] => {\n      return routeConfigs.map((routeConfig, i) => {\n        const routeOptions = routeConfig.options\n        const route = new Route(routeConfig, routeOptions, i, parent, this)\n        const existingRoute = (this.routesById as any)[route.id]\n\n        if (existingRoute) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\n              `Duplicate routes found with id: ${String(route.id)}`,\n              this.routesById,\n              route,\n            )\n          }\n          throw new Error()\n        }\n\n        ;(this.routesById as any)[route.id] = route\n\n        const children = routeConfig.children as RouteConfig[]\n\n        route.childRoutes = children.length\n          ? recurseRoutes(children, route)\n          : undefined\n\n        return route\n      })\n    }\n\n    const routes = recurseRoutes([rootRouteConfig])\n\n    return routes[0]!\n  }\n\n  #parseLocation = (previousLocation?: ParsedLocation): ParsedLocation => {\n    let { pathname, search, hash, state } = this.history.location\n\n    const parsedSearch = this.options.parseSearch(search)\n\n    return {\n      pathname: pathname,\n      searchStr: search,\n      search: replaceEqualDeep(previousLocation?.search, parsedSearch),\n      hash: hash.split('#').reverse()[0] ?? '',\n      href: `${pathname}${search}${hash}`,\n      state: state as LocationState,\n      key: state?.key || '__init__',\n    }\n  }\n\n  #onFocus = () => {\n    this.load()\n  }\n\n  #buildLocation = (dest: BuildNextOptions = {}): ParsedLocation => {\n    const fromPathname = dest.fromCurrent\n      ? this.store.state.latestLocation.pathname\n      : dest.from ?? this.store.state.latestLocation.pathname\n\n    let pathname = resolvePath(\n      this.basepath ?? '/',\n      fromPathname,\n      `${dest.to ?? '.'}`,\n    )\n\n    const fromMatches = this.matchRoutes(\n      this.store.state.latestLocation.pathname,\n      {\n        strictParseParams: true,\n      },\n    )\n\n    const toMatches = this.matchRoutes(pathname)\n\n    const prevParams = { ...last(fromMatches)?.params }\n\n    let nextParams =\n      (dest.params ?? true) === true\n        ? prevParams\n        : functionalUpdate(dest.params!, prevParams)\n\n    if (nextParams) {\n      toMatches\n        .map((d) => d.route.options.stringifyParams)\n        .filter(Boolean)\n        .forEach((fn) => {\n          Object.assign({}, nextParams!, fn!(nextParams!))\n        })\n    }\n\n    pathname = interpolatePath(pathname, nextParams ?? {})\n\n    // Pre filters first\n    const preFilteredSearch = dest.__preSearchFilters?.length\n      ? dest.__preSearchFilters?.reduce(\n          (prev, next) => next(prev),\n          this.store.state.latestLocation.search,\n        )\n      : this.store.state.latestLocation.search\n\n    // Then the link/navigate function\n    const destSearch =\n      dest.search === true\n        ? preFilteredSearch // Preserve resolvedFrom true\n        : dest.search\n        ? functionalUpdate(dest.search, preFilteredSearch) ?? {} // Updater\n        : dest.__preSearchFilters?.length\n        ? preFilteredSearch // Preserve resolvedFrom filters\n        : {}\n\n    // Then post filters\n    const postFilteredSearch = dest.__postSearchFilters?.length\n      ? dest.__postSearchFilters.reduce((prev, next) => next(prev), destSearch)\n      : destSearch\n\n    const search = replaceEqualDeep(\n      this.store.state.latestLocation.search,\n      postFilteredSearch,\n    )\n\n    const searchStr = this.options.stringifySearch(search)\n    let hash =\n      dest.hash === true\n        ? this.store.state.latestLocation.hash\n        : functionalUpdate(dest.hash!, this.store.state.latestLocation.hash)\n    hash = hash ? `#${hash}` : ''\n\n    return {\n      pathname,\n      search,\n      searchStr,\n      state: this.store.state.latestLocation.state,\n      hash,\n      href: `${pathname}${searchStr}${hash}`,\n      key: dest.key,\n    }\n  }\n\n  #commitLocation = (location: BuildNextOptions & { replace?: boolean }) => {\n    const next = this.buildNext(location)\n    const id = '' + Date.now() + Math.random()\n\n    if (this.navigateTimeout) clearTimeout(this.navigateTimeout)\n\n    let nextAction: 'push' | 'replace' = 'replace'\n\n    if (!location.replace) {\n      nextAction = 'push'\n    }\n\n    const isSameUrl = this.store.state.latestLocation.href === next.href\n\n    if (isSameUrl && !next.key) {\n      nextAction = 'replace'\n    }\n\n    const href = `${next.pathname}${next.searchStr}${\n      next.hash ? `#${next.hash}` : ''\n    }`\n\n    this.history[nextAction === 'push' ? 'push' : 'replace'](href, {\n      id,\n      ...next.state,\n    })\n\n    // this.load(this.#parseLocation(this.store.state.latestLocation))\n\n    return (this.navigationPromise = new Promise((resolve) => {\n      const previousNavigationResolve = this.resolveNavigation\n\n      this.resolveNavigation = () => {\n        previousNavigationResolve()\n        resolve()\n      }\n    }))\n  }\n}\n\n// Detect if we're in the DOM\nconst isServer = typeof window === 'undefined' || !window.document.createElement\n\nfunction getInitialRouterState(): RouterStore {\n  return {\n    status: 'idle',\n    latestLocation: null!,\n    currentLocation: null!,\n    currentMatches: [],\n    lastUpdated: Date.now(),\n    // matchCache: {}, // TODO:\n    // get isFetching() {\n    //   return (\n    //     this.status === 'loading' ||\n    //     this.currentMatches.some((d) => d.store.state.isFetching)\n    //   )\n    // },\n    // get isPreloading() {\n    //   return Object.values(this.matchCache).some(\n    //     (d) =>\n    //       d.match.store.state.isFetching &&\n    //       !this.currentMatches.find((dd) => dd.id === d.match.id),\n    //   )\n    // },\n  }\n}\n\nfunction isCtrlEvent(e: MouseEvent) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n}\n\nfunction linkMatches(matches: RouteMatch<any, any>[]) {\n  matches.forEach((match, index) => {\n    const parent = matches[index - 1]\n\n    if (parent) {\n      match.__setParentMatch(parent)\n    }\n  })\n}\n"],"names":["defaultFetchServerDataFn","router","routeMatch","next","buildNext","to","search","d","__data","matchId","id","res","fetch","href","method","signal","abortController","ok","json","Error","Router","startedLoadingAt","Date","now","resolveNavigation","constructor","options","defaultPreloadDelay","context","undefined","stringifySearch","defaultStringifySearch","parseSearch","defaultParseSearch","fetchServerDataFn","store","Store","getInitialRouterState","basepath","update","reset","setState","s","Object","assign","mount","isServer","state","currentMatches","length","load","visibilityChangeEvent","focusEvent","window","addEventListener","removeEventListener","opts","history","createMemoryHistory","createBrowserHistory","latestLocation","currentLocation","listen","routeConfig","trimPath","routesById","routeTree","matches","matchRoutes","pathname","__preSearchFilters","map","match","route","preSearchFilters","flat","filter","Boolean","__postSearchFilters","postSearchFilters","cancelMatches","pendingMatches","forEach","cancel","startedAt","batch","strictParseParams","status","pendingLocation","loadMatches","err","console","warn","invariant","navigationPromise","previousMatches","exiting","staying","find","dd","push","entering","__onExit","params","routeSearch","error","onTransition","onLoaded","onRouteChange","getRoute","loadRoute","navigateOpts","preloadRoute","preload","existingMatches","recurse","routes","parentMatch","last","filteredRoutes","filterRoutes","foundRoutes","findMatchInRoutes","parentRoutes","some","path","childRoutes","fuzzy","matchParams","matchPathname","fullPath","caseSensitive","parsedParams","parseParams","foundRoute","interpolatedPath","interpolatePath","RouteMatch","joinPaths","linkMatches","resolvedMatches","loaderOpts","__validate","Promise","all","beforeLoad","onLoadError","matchPromises","index","prevMatch","__loadPromise","reload","navigate","fromCurrent","replace","resolvePath","from","cleanPath","hash","toString","String","fromString","isExternal","URL","e","matchRoute","location","pending","buildLink","target","activeOptions","preloadMaxAge","userPreloadMaxAge","preloadGcMaxAge","userPreloadGcMaxAge","preloadDelay","userPreloadDelay","disabled","type","nextOpts","defaultPreload","pathIsEqual","currentPathSplit","split","nextPathSplit","pathIsFuzzyEqual","every","i","hashIsEqual","pathTest","exact","hashTest","includeHash","isActive","handleClick","isCtrlEvent","defaultPrevented","button","preventDefault","handleFocus","catch","handleEnter","preloadTimeout","setTimeout","handleLeave","clearTimeout","dehydrate","pick","hydrate","dehydratedRouter","dehydratedMatch","rootRouteConfig","recurseRoutes","routeConfigs","parent","routeOptions","Route","existingRoute","process","env","NODE_ENV","children","previousLocation","parsedSearch","searchStr","replaceEqualDeep","reverse","key","dest","fromPathname","fromMatches","toMatches","prevParams","nextParams","functionalUpdate","stringifyParams","fn","preFilteredSearch","reduce","prev","destSearch","postFilteredSearch","Math","random","navigateTimeout","nextAction","isSameUrl","resolve","previousNavigationResolve","document","createElement","lastUpdated","metaKey","altKey","ctrlKey","shiftKey","__setParentMatch"],"mappings":"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"}