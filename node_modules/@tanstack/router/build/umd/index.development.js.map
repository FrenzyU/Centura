{"version":3,"file":"index.development.js","sources":["../../../../node_modules/.pnpm/tiny-invariant@1.3.1/node_modules/tiny-invariant/dist/esm/tiny-invariant.js","../../src/history.ts","../../src/utils.ts","../../src/path.ts","../../src/qss.ts","../../src/route.ts","../../src/routeConfig.ts","../../../store/build/esm/index.js","../../src/routeMatch.ts","../../src/searchParams.ts","../../src/router.ts"],"sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","// While the public API was clearly inspired by the \"history\" npm package,\n// This implementation attempts to be more lightweight by\n// making assumptions about the way TanStack Router works\n\nimport { match } from 'assert'\n\nexport interface RouterHistory {\n  location: RouterLocation\n  listen: (cb: () => void) => () => void\n  push: (path: string, state: any) => void\n  replace: (path: string, state: any) => void\n  go: (index: number) => void\n  back: () => void\n  forward: () => void\n}\n\nexport interface ParsedPath {\n  href: string\n  pathname: string\n  search: string\n  hash: string\n}\n\nexport interface RouterLocation extends ParsedPath {\n  state: any\n}\n\nconst popStateEvent = 'popstate'\n\nfunction createHistory(opts: {\n  getLocation: () => RouterLocation\n  listener: (onUpdate: () => void) => () => void\n  pushState: (path: string, state: any) => void\n  replaceState: (path: string, state: any) => void\n  go: (n: number) => void\n  back: () => void\n  forward: () => void\n}): RouterHistory {\n  let currentLocation = opts.getLocation()\n  let unsub = () => {}\n  let listeners = new Set<() => void>()\n\n  const onUpdate = () => {\n    currentLocation = opts.getLocation()\n\n    listeners.forEach((listener) => listener())\n  }\n\n  return {\n    get location() {\n      return currentLocation\n    },\n    listen: (cb: () => void) => {\n      if (listeners.size === 0) {\n        unsub = opts.listener(onUpdate)\n      }\n      listeners.add(cb)\n\n      return () => {\n        listeners.delete(cb)\n        if (listeners.size === 0) {\n          unsub()\n        }\n      }\n    },\n    push: (path: string, state: any) => {\n      opts.pushState(path, state)\n      onUpdate()\n    },\n    replace: (path: string, state: any) => {\n      opts.replaceState(path, state)\n      onUpdate()\n    },\n    go: (index) => {\n      opts.go(index)\n      onUpdate()\n    },\n    back: () => {\n      opts.back()\n      onUpdate()\n    },\n    forward: () => {\n      opts.forward()\n      onUpdate()\n    },\n  }\n}\n\nexport function createBrowserHistory(opts?: {\n  getHref?: () => string\n  createHref?: (path: string) => string\n}): RouterHistory {\n  const getHref =\n    opts?.getHref ??\n    (() =>\n      `${window.location.pathname}${window.location.hash}${window.location.search}`)\n  const createHref = opts?.createHref ?? ((path) => path)\n  const getLocation = () => parseLocation(getHref(), history.state)\n\n  return createHistory({\n    getLocation,\n    listener: (onUpdate) => {\n      window.addEventListener(popStateEvent, onUpdate)\n      return () => {\n        window.removeEventListener(popStateEvent, onUpdate)\n      }\n    },\n    pushState: (path, state) => {\n      window.history.pushState(\n        { ...state, key: createRandomKey() },\n        '',\n        createHref(path),\n      )\n    },\n    replaceState: (path, state) => {\n      window.history.replaceState(\n        { ...state, key: createRandomKey() },\n        '',\n        createHref(path),\n      )\n    },\n    back: () => window.history.back(),\n    forward: () => window.history.forward(),\n    go: (n) => window.history.go(n),\n  })\n}\n\nexport function createHashHistory(): RouterHistory {\n  return createBrowserHistory({\n    getHref: () => window.location.hash.substring(1),\n    createHref: (path) => `#${path}`,\n  })\n}\n\nexport function createMemoryHistory(\n  opts: {\n    initialEntries: string[]\n    initialIndex?: number\n  } = {\n    initialEntries: ['/'],\n  },\n): RouterHistory {\n  const entries = opts.initialEntries\n  let index = opts.initialIndex ?? entries.length - 1\n  let currentState = {}\n\n  const getLocation = () => parseLocation(entries[index]!, currentState)\n\n  return createHistory({\n    getLocation,\n    listener: () => {\n      return () => {}\n    },\n    pushState: (path, state) => {\n      currentState = {\n        ...state,\n        key: createRandomKey(),\n      }\n      entries.push(path)\n      index++\n    },\n    replaceState: (path, state) => {\n      currentState = {\n        ...state,\n        key: createRandomKey(),\n      }\n      entries[index] = path\n    },\n    back: () => {\n      index--\n    },\n    forward: () => {\n      index = Math.min(index + 1, entries.length - 1)\n    },\n    go: (n) => window.history.go(n),\n  })\n}\n\nfunction parseLocation(href: string, state: any): RouterLocation {\n  let hashIndex = href.indexOf('#')\n  let searchIndex = href.indexOf('?')\n\n  return {\n    href,\n    pathname: href.substring(\n      0,\n      hashIndex > 0\n        ? searchIndex > 0\n          ? Math.min(hashIndex, searchIndex)\n          : hashIndex\n        : searchIndex > 0\n        ? searchIndex\n        : href.length,\n    ),\n    hash: hashIndex > -1 ? href.substring(hashIndex, searchIndex) : '',\n    search: searchIndex > -1 ? href.substring(searchIndex) : '',\n    state,\n  }\n}\n\n// Thanks co-pilot!\nfunction createRandomKey() {\n  return (Math.random() + 1).toString(36).substring(7)\n}\n","export type NoInfer<T> = [T][T extends any ? 0 : never]\nexport type IsAny<T, Y, N> = 1 extends 0 & T ? Y : N\nexport type IsAnyBoolean<T> = 1 extends 0 & T ? true : false\nexport type IsKnown<T, Y, N> = unknown extends T ? N : Y\nexport type PickAsRequired<T, K extends keyof T> = Omit<T, K> &\n  Required<Pick<T, K>>\nexport type PickAsPartial<T, K extends keyof T> = Omit<T, K> &\n  Partial<Pick<T, K>>\nexport type PickUnsafe<T, K> = K extends keyof T ? Pick<T, K> : never\nexport type PickExtra<T, K> = Expand<{\n  [TKey in keyof K as string extends TKey\n    ? never\n    : TKey extends keyof T\n    ? never\n    : TKey]: K[TKey]\n}>\nexport type PickRequired<T> = {\n  [K in keyof T as undefined extends T[K] ? never : K]: T[K]\n}\n\nexport type Expand<T> = T extends object\n  ? T extends infer O\n    ? { [K in keyof O]: O[K] }\n    : never\n  : T\n\nexport type UnionToIntersection<U> = (\n  U extends any ? (k: U) => void : never\n) extends (k: infer I) => any\n  ? I\n  : never\n\nexport type Values<O> = O[ValueKeys<O>]\nexport type ValueKeys<O> = Extract<keyof O, PropertyKey>\n\nexport type DeepAwaited<T> = T extends Promise<infer A>\n  ? DeepAwaited<A>\n  : T extends Record<infer A, Promise<infer B>>\n  ? { [K in A]: DeepAwaited<B> }\n  : T\n\nexport type PathParamMask<TRoutePath extends string> =\n  TRoutePath extends `${infer L}/$${infer C}/${infer R}`\n    ? PathParamMask<`${L}/${string}/${R}`>\n    : TRoutePath extends `${infer L}/$${infer C}`\n    ? PathParamMask<`${L}/${string}`>\n    : TRoutePath\n\nexport type Timeout = ReturnType<typeof setTimeout>\n\nexport type Updater<TPrevious, TResult = TPrevious> =\n  | TResult\n  | ((prev?: TPrevious) => TResult)\n\nexport type PickExtract<T, U> = {\n  [K in keyof T as T[K] extends U ? K : never]: T[K]\n}\n\nexport type PickExclude<T, U> = {\n  [K in keyof T as T[K] extends U ? never : K]: T[K]\n}\n\nexport function last<T>(arr: T[]) {\n  return arr[arr.length - 1]\n}\n\nexport function warning(cond: any, message: string): cond is true {\n  if (cond) {\n    if (typeof console !== 'undefined') console.warn(message)\n\n    try {\n      throw new Error(message)\n    } catch {}\n  }\n\n  return true\n}\n\nfunction isFunction(d: any): d is Function {\n  return typeof d === 'function'\n}\n\nexport function functionalUpdate<TResult>(\n  updater: Updater<TResult>,\n  previous: TResult,\n) {\n  if (isFunction(updater)) {\n    return updater(previous as TResult)\n  }\n\n  return updater\n}\n\nexport function pick<T, K extends keyof T>(parent: T, keys: K[]): Pick<T, K> {\n  return keys.reduce((obj: any, key: K) => {\n    obj[key] = parent[key]\n    return obj\n  }, {} as any)\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between immutable JSON values for example.\n * Do not use this with signals\n */\nexport function replaceEqualDeep<T>(prev: any, _next: T): T {\n  if (prev === _next) {\n    return prev\n  }\n\n  const next = _next as any\n\n  const array = Array.isArray(prev) && Array.isArray(next)\n\n  if (array || (isPlainObject(prev) && isPlainObject(next))) {\n    const prevSize = array ? prev.length : Object.keys(prev).length\n    const nextItems = array ? next : Object.keys(next)\n    const nextSize = nextItems.length\n    const copy: any = array ? [] : {}\n\n    let equalItems = 0\n\n    for (let i = 0; i < nextSize; i++) {\n      const key = array ? i : nextItems[i]\n      copy[key] = replaceEqualDeep(prev[key], next[key])\n      if (copy[key] === prev[key]) {\n        equalItems++\n      }\n    }\n\n    return prevSize === nextSize && equalItems === prevSize ? prev : copy\n  }\n\n  return next\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nexport function isPlainObject(o: any) {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has modified constructor\n  const ctor = o.constructor\n  if (typeof ctor === 'undefined') {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any) {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n","import invariant from 'tiny-invariant'\nimport { AnyPathParams } from './routeConfig'\nimport { MatchLocation } from './router'\nimport { last } from './utils'\n\nexport interface Segment {\n  type: 'pathname' | 'param' | 'wildcard'\n  value: string\n}\n\nexport function joinPaths(paths: (string | undefined)[]) {\n  return cleanPath(paths.filter(Boolean).join('/'))\n}\n\nexport function cleanPath(path: string) {\n  // remove double slashes\n  return path.replace(/\\/{2,}/g, '/')\n}\n\nexport function trimPathLeft(path: string) {\n  return path === '/' ? path : path.replace(/^\\/{1,}/, '')\n}\n\nexport function trimPathRight(path: string) {\n  return path === '/' ? path : path.replace(/\\/{1,}$/, '')\n}\n\nexport function trimPath(path: string) {\n  return trimPathRight(trimPathLeft(path))\n}\n\nexport function resolvePath(basepath: string, base: string, to: string) {\n  base = base.replace(new RegExp(`^${basepath}`), '/')\n  to = to.replace(new RegExp(`^${basepath}`), '/')\n\n  let baseSegments = parsePathname(base)\n  const toSegments = parsePathname(to)\n\n  toSegments.forEach((toSegment, index) => {\n    if (toSegment.value === '/') {\n      if (!index) {\n        // Leading slash\n        baseSegments = [toSegment]\n      } else if (index === toSegments.length - 1) {\n        // Trailing Slash\n        baseSegments.push(toSegment)\n      } else {\n        // ignore inter-slashes\n      }\n    } else if (toSegment.value === '..') {\n      // Extra trailing slash? pop it off\n      if (baseSegments.length > 1 && last(baseSegments)?.value === '/') {\n        baseSegments.pop()\n      }\n      baseSegments.pop()\n    } else if (toSegment.value === '.') {\n      return\n    } else {\n      baseSegments.push(toSegment)\n    }\n  })\n\n  const joined = joinPaths([basepath, ...baseSegments.map((d) => d.value)])\n\n  return cleanPath(joined)\n}\n\nexport function parsePathname(pathname?: string): Segment[] {\n  if (!pathname) {\n    return []\n  }\n\n  pathname = cleanPath(pathname)\n\n  const segments: Segment[] = []\n\n  if (pathname.slice(0, 1) === '/') {\n    pathname = pathname.substring(1)\n    segments.push({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  if (!pathname) {\n    return segments\n  }\n\n  // Remove empty segments and '.' segments\n  const split = pathname.split('/').filter(Boolean)\n\n  segments.push(\n    ...split.map((part): Segment => {\n      if (part.startsWith('*')) {\n        return {\n          type: 'wildcard',\n          value: part,\n        }\n      }\n\n      if (part.charAt(0) === '$') {\n        return {\n          type: 'param',\n          value: part,\n        }\n      }\n\n      return {\n        type: 'pathname',\n        value: part,\n      }\n    }),\n  )\n\n  if (pathname.slice(-1) === '/') {\n    pathname = pathname.substring(1)\n    segments.push({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  return segments\n}\n\nexport function interpolatePath(\n  path: string | undefined,\n  params: any,\n  leaveWildcard?: boolean,\n) {\n  const interpolatedPathSegments = parsePathname(path)\n\n  return joinPaths(\n    interpolatedPathSegments.map((segment) => {\n      if (segment.value === '*' && !leaveWildcard) {\n        return ''\n      }\n\n      if (segment.type === 'param') {\n        return params![segment.value.substring(1)] ?? ''\n      }\n\n      return segment.value\n    }),\n  )\n}\n\nexport function matchPathname(\n  basepath: string,\n  currentPathname: string,\n  matchLocation: Pick<MatchLocation, 'to' | 'fuzzy' | 'caseSensitive'>,\n): AnyPathParams | undefined {\n  const pathParams = matchByPath(basepath, currentPathname, matchLocation)\n  // const searchMatched = matchBySearch(currentLocation.search, matchLocation)\n\n  if (matchLocation.to && !pathParams) {\n    return\n  }\n\n  return pathParams ?? {}\n}\n\nexport function matchByPath(\n  basepath: string,\n  from: string,\n  matchLocation: Pick<MatchLocation, 'to' | 'caseSensitive' | 'fuzzy'>,\n): Record<string, string> | undefined {\n  if (!from.startsWith(basepath)) {\n    return undefined\n  }\n  from = basepath != '/' ? from.substring(basepath.length) : from\n  const baseSegments = parsePathname(from)\n  const to = `${matchLocation.to ?? '*'}`\n  const routeSegments = parsePathname(to)\n\n  const params: Record<string, string> = {}\n\n  let isMatch = (() => {\n    for (\n      let i = 0;\n      i < Math.max(baseSegments.length, routeSegments.length);\n      i++\n    ) {\n      const baseSegment = baseSegments[i]\n      const routeSegment = routeSegments[i]\n\n      const isLastRouteSegment = i === routeSegments.length - 1\n      const isLastBaseSegment = i === baseSegments.length - 1\n\n      if (routeSegment) {\n        if (routeSegment.type === 'wildcard') {\n          if (baseSegment?.value) {\n            params['*'] = joinPaths(baseSegments.slice(i).map((d) => d.value))\n            return true\n          }\n          return false\n        }\n\n        if (routeSegment.type === 'pathname') {\n          if (routeSegment.value === '/' && !baseSegment?.value) {\n            return true\n          }\n\n          if (baseSegment) {\n            if (matchLocation.caseSensitive) {\n              if (routeSegment.value !== baseSegment.value) {\n                return false\n              }\n            } else if (\n              routeSegment.value.toLowerCase() !==\n              baseSegment.value.toLowerCase()\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (!baseSegment) {\n          return false\n        }\n\n        if (routeSegment.type === 'param') {\n          if (baseSegment?.value === '/') {\n            return false\n          }\n          if (baseSegment.value.charAt(0) !== '$') {\n            params[routeSegment.value.substring(1)] = baseSegment.value\n          }\n        }\n      }\n\n      if (isLastRouteSegment && !isLastBaseSegment) {\n        return !!matchLocation.fuzzy\n      }\n    }\n    return true\n  })()\n\n  return isMatch ? (params as Record<string, string>) : undefined\n}\n","// @ts-nocheck\n\n// qss has been slightly modified and inlined here for our use cases (and compression's sake). We've included it as a hard dependency for MIT license attribution.\n\nexport function encode(obj, pfx?: string) {\n  var k,\n    i,\n    tmp,\n    str = ''\n\n  for (k in obj) {\n    if ((tmp = obj[k]) !== void 0) {\n      if (Array.isArray(tmp)) {\n        for (i = 0; i < tmp.length; i++) {\n          str && (str += '&')\n          str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp[i])\n        }\n      } else {\n        str && (str += '&')\n        str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp)\n      }\n    }\n  }\n\n  return (pfx || '') + str\n}\n\nfunction toValue(mix) {\n  if (!mix) return ''\n  var str = decodeURIComponent(mix)\n  if (str === 'false') return false\n  if (str === 'true') return true\n  if (str.charAt(0) === '0') return str\n  return +str * 0 === 0 ? +str : str\n}\n\nexport function decode(str) {\n  var tmp,\n    k,\n    out = {},\n    arr = str.split('&')\n\n  while ((tmp = arr.shift())) {\n    tmp = tmp.split('=')\n    k = tmp.shift()\n    if (out[k] !== void 0) {\n      out[k] = [].concat(out[k], toValue(tmp.shift()))\n    } else {\n      out[k] = toValue(tmp.shift())\n    }\n  }\n\n  return out\n}\n","import { RouteConfig, RouteOptions } from './routeConfig'\nimport {\n  AnyAllRouteInfo,\n  AnyRouteInfo,\n  DefaultAllRouteInfo,\n  RouteInfo,\n} from './routeInfo'\nimport { Router } from './router'\n\nexport interface AnyRoute extends Route<any, any, any> {}\n\nexport class Route<\n  TAllRouteInfo extends AnyAllRouteInfo = DefaultAllRouteInfo,\n  TRouteInfo extends AnyRouteInfo = RouteInfo,\n  TRouterContext = unknown,\n> {\n  routeInfo!: TRouteInfo\n  id!: TRouteInfo['id']\n  customId!: TRouteInfo['customId']\n  path!: TRouteInfo['path']\n  fullPath!: TRouteInfo['fullPath']\n  getParentRoute!: () => undefined | AnyRoute\n  childRoutes?: AnyRoute[]\n  options!: RouteOptions\n  originalIndex!: number\n  getRouter!: () => Router<\n    TAllRouteInfo['routeConfig'],\n    TAllRouteInfo,\n    TRouterContext\n  >\n  constructor(\n    routeConfig: RouteConfig,\n    options: TRouteInfo['options'],\n    originalIndex: number,\n    parent: undefined | Route<TAllRouteInfo, any>,\n    router: Router<TAllRouteInfo['routeConfig'], TAllRouteInfo, TRouterContext>,\n  ) {\n    Object.assign(this, {\n      ...routeConfig,\n      originalIndex,\n      options,\n      getRouter: () => router,\n      childRoutes: undefined!,\n      getParentRoute: () => parent,\n    })\n\n    router.options.createRoute?.({ router, route: this })\n  }\n}\n","import invariant from 'tiny-invariant'\nimport { GetFrameworkGeneric } from './frameworks'\nimport { ParsePathParams } from './link'\nimport { joinPaths, trimPath, trimPathRight } from './path'\nimport { RouteInfo } from './routeInfo'\nimport { RouteMatch } from './routeMatch'\nimport { AnyRouter, RegisteredRouter, Router } from './router'\nimport { Expand, IsAny, NoInfer, PickUnsafe } from './utils'\n\nexport const rootRouteId = '__root__' as const\nexport type RootRouteId = typeof rootRouteId\n\nexport type AnyLoaderData = {}\nexport type AnyPathParams = {}\nexport type AnySearchSchema = {}\nexport interface RouteMeta {}\n\n// The parse type here allows a zod schema to be passed directly to the validator\nexport type SearchSchemaValidator<TReturn, TParentSchema> =\n  | SearchSchemaValidatorObj<TReturn, TParentSchema>\n  | SearchSchemaValidatorFn<TReturn, TParentSchema>\n\nexport type SearchSchemaValidatorObj<TReturn, TParentSchema> = {\n  parse?: SearchSchemaValidatorFn<TReturn, TParentSchema>\n}\n\nexport type SearchSchemaValidatorFn<TReturn, TParentSchema> = (\n  searchObj: Record<string, unknown>,\n) => {} extends TParentSchema\n  ? TReturn\n  : keyof TReturn extends keyof TParentSchema\n  ? {\n      error: 'Top level search params cannot be redefined by child routes!'\n      keys: keyof TReturn & keyof TParentSchema\n    }\n  : TReturn\n\nexport type DefinedPathParamWarning =\n  'Path params cannot be redefined by child routes!'\n\nexport type ParentParams<TParentParams> = AnyPathParams extends TParentParams\n  ? {}\n  : {\n      [Key in keyof TParentParams]?: DefinedPathParamWarning\n    }\n\nexport type OnLoadFn<\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams extends AnyPathParams = {},\n> = (\n  loaderContext: LoaderContext<TFullSearchSchema, TAllParams>,\n) => Promise<any> | void\n\nexport interface LoaderContext<\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams extends AnyPathParams = {},\n> {\n  params: TAllParams\n  search: TFullSearchSchema\n  signal?: AbortSignal\n  // parentLoaderPromise?: Promise<TParentRouteLoaderData>\n}\n\nexport type UnloaderFn<TPath extends string> = (\n  routeMatch: RouteMatch<any, RouteInfo<string, TPath>>,\n) => void\n\nexport type RouteOptions<\n  TRouteId extends string = string,\n  TPath extends string = string,\n  TParentSearchSchema extends {} = {},\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = TSearchSchema,\n  TParentParams extends AnyPathParams = {},\n  TParams extends Record<ParsePathParams<TPath>, unknown> = Record<\n    ParsePathParams<TPath>,\n    string\n  >,\n  TAllParams extends AnyPathParams = {},\n> = (\n  | {\n      // The path to match (relative to the nearest parent `Route` component or root basepath)\n      path: TPath\n    }\n  | {\n      id: TRouteId\n    }\n) & {\n  // If true, this route will be matched as case-sensitive\n  caseSensitive?: boolean\n  validateSearch?: SearchSchemaValidator<TSearchSchema, TParentSearchSchema>\n  // Filter functions that can manipulate search params *before* they are passed to links and navigate\n  // calls that match this route.\n  preSearchFilters?: SearchFilter<TFullSearchSchema>[]\n  // Filter functions that can manipulate search params *after* they are passed to links and navigate\n  // calls that match this route.\n  postSearchFilters?: SearchFilter<TFullSearchSchema>[]\n  // The content to be rendered when the route is matched. If no component is provided, defaults to `<Outlet />`\n  component?: GetFrameworkGeneric<'Component'> // , NoInfer<TParentAllLoaderData>>\n  // The content to be rendered when the route encounters an error\n  errorComponent?: GetFrameworkGeneric<'ErrorComponent'> // , NoInfer<TParentAllLoaderData>>\n  // If supported by your framework, the content to be rendered as the fallback content until the route is ready to render\n  pendingComponent?: GetFrameworkGeneric<'Component'> //, NoInfer<TParentAllLoaderData>>\n\n  // This async function is called before a route is loaded.\n  // If an error is thrown here, the route's loader will not be called.\n  // If thrown during a navigation, the navigation will be cancelled and the error will be passed to the `onLoadError` function.\n  // If thrown during a preload event, the error will be logged to the console.\n  beforeLoad?: (opts: {\n    router: AnyRouter\n    match: RouteMatch\n  }) => Promise<void> | void\n\n  // An asynchronous function responsible for preparing or fetching data for the route before it is rendered\n  onLoad?: OnLoadFn<TFullSearchSchema, TAllParams>\n\n  // This function will be called if the route's loader throws an error **during an attempted navigation**.\n  // If you want to redirect due to an error, call `router.navigate()` from within this function.\n  onLoadError?: (err: any) => void\n  // This function is called\n  // when moving from an inactive state to an active one. Likewise, when moving from\n  // an active to an inactive state, the return function (if provided) is called.\n  onLoaded?: (matchContext: {\n    params: TAllParams\n    search: TFullSearchSchema\n  }) =>\n    | void\n    | undefined\n    | ((match: { params: TAllParams; search: TFullSearchSchema }) => void)\n  // This function is called when the route remains active from one transition to the next.\n  onTransition?: (match: {\n    params: TAllParams\n    search: TFullSearchSchema\n  }) => void\n  // An object of whatever you want! This object is accessible anywhere matches are.\n  meta?: RouteMeta // TODO: Make this nested and mergeable\n} & (\n    | {\n        parseParams?: never\n        stringifyParams?: never\n      }\n    | {\n        // Parse params optionally receives path params as strings and returns them in a parsed format (like a number or boolean)\n        parseParams: (\n          rawParams: IsAny<TPath, any, Record<ParsePathParams<TPath>, string>>,\n        ) => TParams\n        stringifyParams: (\n          params: TParams,\n        ) => Record<ParsePathParams<TPath>, string>\n      }\n  ) &\n  (PickUnsafe<TParentParams, ParsePathParams<TPath>> extends never // Detect if an existing path param is being redefined\n    ? {}\n    : 'Cannot redefined path params in child routes!')\n\nexport type SearchFilter<T, U = T> = (prev: T) => U\n\nexport interface RouteConfig<\n  TId extends string = string,\n  TRouteId extends string = string,\n  TPath extends string = string,\n  TFullPath extends string = string,\n  TParentSearchSchema extends {} = {},\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = {},\n  TParentParams extends AnyPathParams = {},\n  TParams extends AnyPathParams = {},\n  TAllParams extends AnyPathParams = {},\n  TKnownChildren = unknown,\n> {\n  id: TId\n  routeId: TRouteId\n  path: NoInfer<TPath>\n  fullPath: TFullPath\n  options: RouteOptions<\n    TRouteId,\n    TPath,\n    TParentSearchSchema,\n    TSearchSchema,\n    TFullSearchSchema,\n    TParentParams,\n    TParams,\n    TAllParams\n  >\n  children?: TKnownChildren\n  addChildren: IsAny<\n    TId,\n    any,\n    <TNewChildren extends any>(\n      children: TNewChildren extends AnyRouteConfig[]\n        ? TNewChildren\n        : { error: 'Invalid route detected'; route: TNewChildren },\n    ) => RouteConfig<\n      TId,\n      TRouteId,\n      TPath,\n      TFullPath,\n      TParentSearchSchema,\n      TSearchSchema,\n      TFullSearchSchema,\n      TParentParams,\n      TParams,\n      TAllParams,\n      TNewChildren\n    >\n  >\n  createRoute: CreateRouteConfigFn<\n    false,\n    TId,\n    TFullPath,\n    TFullSearchSchema,\n    TAllParams\n  >\n  generate: GenerateFn<TRouteId, TPath, TParentSearchSchema, TParentParams>\n}\n\ntype GenerateFn<\n  TRouteId extends string = string,\n  TPath extends string = string,\n  TParentSearchSchema extends {} = {},\n  TParentParams extends AnyPathParams = {},\n> = <\n  TSearchSchema extends AnySearchSchema = {},\n  TParams extends Record<ParsePathParams<TPath>, unknown> = Record<\n    ParsePathParams<TPath>,\n    string\n  >,\n  TAllParams extends AnyPathParams extends TParams\n    ? Record<ParsePathParams<TPath>, string>\n    : NoInfer<TParams> = AnyPathParams extends TParams\n    ? Record<ParsePathParams<TPath>, string>\n    : NoInfer<TParams>,\n>(\n  options: Omit<\n    RouteOptions<\n      TRouteId,\n      TPath,\n      TParentSearchSchema,\n      TSearchSchema,\n      Expand<TParentSearchSchema & TSearchSchema>,\n      TParentParams,\n      TParams,\n      Expand<TParentParams & TAllParams>\n    >,\n    'path'\n  >,\n) => void\n\ntype CreateRouteConfigFn<\n  TIsRoot extends boolean = false,\n  TParentId extends string = string,\n  TParentPath extends string = string,\n  TParentRouteLoaderData extends AnyLoaderData = {},\n  TParentAllLoaderData extends AnyLoaderData = {},\n  TParentSearchSchema extends AnySearchSchema = {},\n  TParentParams extends AnyPathParams = {},\n> = <\n  TRouteId extends string,\n  TPath extends string,\n  TLoaderData extends AnyLoaderData,\n  TSearchSchema extends AnySearchSchema = AnySearchSchema,\n  TParams extends Record<ParsePathParams<TPath>, unknown> = Record<\n    ParsePathParams<TPath>,\n    string\n  >,\n  TAllParams extends AnyPathParams extends TParams\n    ? Record<ParsePathParams<TPath>, string>\n    : NoInfer<TParams> = AnyPathParams extends TParams\n    ? Record<ParsePathParams<TPath>, string>\n    : NoInfer<TParams>,\n  TKnownChildren extends RouteConfig[] = RouteConfig[],\n  TResolvedId extends string = string extends TRouteId\n    ? string extends TPath\n      ? string\n      : TPath\n    : TRouteId,\n>(\n  options?: TIsRoot extends true\n    ? Omit<\n        RouteOptions<\n          TRouteId,\n          TPath,\n          TParentSearchSchema,\n          TSearchSchema,\n          Expand<TParentSearchSchema & TSearchSchema>,\n          TParentParams,\n          TParams,\n          Expand<TParentParams & TAllParams>\n        >,\n        'path'\n      > & { path?: never }\n    : RouteOptions<\n        TRouteId,\n        TPath,\n        TParentSearchSchema,\n        TSearchSchema,\n        Expand<TParentSearchSchema & TSearchSchema>,\n        TParentParams,\n        TParams,\n        Expand<TParentParams & TAllParams>\n      >,\n  children?: TKnownChildren,\n  isRoot?: boolean,\n  parentId?: string,\n  parentPath?: string,\n) => RouteConfig<\n  RoutePrefix<TParentId, TResolvedId>,\n  TResolvedId,\n  TPath,\n  string extends TPath ? '' : RoutePath<RoutePrefix<TParentPath, TPath>>,\n  TParentSearchSchema,\n  TSearchSchema,\n  Expand<TParentSearchSchema & TSearchSchema>,\n  TParentParams,\n  TParams,\n  Expand<TParentParams & TAllParams>,\n  TKnownChildren\n>\n\ntype RoutePath<T extends string> = T extends RootRouteId\n  ? '/'\n  : TrimPathRight<`${T}`>\n\ntype RoutePrefix<\n  TPrefix extends string,\n  TId extends string,\n> = string extends TId\n  ? RootRouteId\n  : TId extends string\n  ? `${TPrefix}/${TId}` extends '/'\n    ? '/'\n    : `/${TrimPathLeft<`${TrimPathRight<TPrefix>}/${TrimPath<TId>}`>}`\n  : never\n\nexport interface AnyRouteConfig\n  extends RouteConfig<any, any, any, any, any, any, any, any, any, any, any> {}\n\nexport interface AnyRouteConfigWithChildren<TChildren>\n  extends RouteConfig<\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    TChildren\n  > {}\n\ntype TrimPath<T extends string> = '' extends T\n  ? ''\n  : TrimPathRight<TrimPathLeft<T>>\n\ntype TrimPathLeft<T extends string> = T extends `${RootRouteId}/${infer U}`\n  ? TrimPathLeft<U>\n  : T extends `/${infer U}`\n  ? TrimPathLeft<U>\n  : T\ntype TrimPathRight<T extends string> = T extends '/'\n  ? '/'\n  : T extends `${infer U}/`\n  ? TrimPathRight<U>\n  : T\n\nexport const createRouteConfig: CreateRouteConfigFn<true> = (\n  options = {} as any,\n  children = [] as any,\n  isRoot = true,\n  parentId,\n  parentPath,\n) => {\n  if (isRoot) {\n    ;(options as any).path = rootRouteId\n  }\n\n  // Strip the root from parentIds\n  if (parentId === rootRouteId) {\n    parentId = ''\n  }\n\n  let path: undefined | string = isRoot ? rootRouteId : options.path\n\n  // If the path is anything other than an index path, trim it up\n  if (path && path !== '/') {\n    path = trimPath(path)\n  }\n\n  const routeId = path || (options as { id?: string }).id\n\n  let id = joinPaths([parentId, routeId])\n\n  if (path === rootRouteId) {\n    path = '/'\n  }\n\n  if (id !== rootRouteId) {\n    id = joinPaths(['/', id])\n  }\n\n  const fullPath =\n    id === rootRouteId ? '/' : trimPathRight(joinPaths([parentPath, path]))\n\n  return {\n    id: id as any,\n    routeId: routeId as any,\n    path: path as any,\n    fullPath: fullPath as any,\n    options: options as any,\n    children,\n    addChildren: (children: any) =>\n      createRouteConfig(options, children, false, parentId, parentPath),\n    createRoute: (childOptions: any) =>\n      createRouteConfig(childOptions, undefined, false, id, fullPath) as any,\n    generate: () => {\n      invariant(\n        false,\n        `routeConfig.generate() is used by TanStack Router's file-based routing code generation and should not actually be called during runtime. `,\n      )\n    },\n  }\n}\n","/**\n * store\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nclass Store {\n  listeners = new Set();\n  batching = false;\n  queue = [];\n  constructor(initialState, options) {\n    this.state = initialState;\n    this.options = options;\n  }\n  subscribe = listener => {\n    this.listeners.add(listener);\n    const unsub = this.options?.onSubscribe?.(listener, this);\n    return () => {\n      this.listeners.delete(listener);\n      unsub?.();\n    };\n  };\n  setState = updater => {\n    const previous = this.state;\n    this.state = this.options?.updateFn ? this.options.updateFn(previous)(updater) : updater(previous);\n    this.queue.push(() => {\n      this.listeners.forEach(listener => listener(this.state, previous));\n      this.options?.onUpdate?.(this.state, previous);\n    });\n    this.#flush();\n  };\n  #flush = () => {\n    if (this.batching) return;\n    this.queue.forEach(cb => cb());\n    this.queue = [];\n  };\n  batch = cb => {\n    this.batching = true;\n    cb();\n    this.batching = false;\n    this.#flush();\n  };\n}\n\nexport { Store };\n//# sourceMappingURL=index.js.map\n","import { Store } from '@tanstack/store'\n//\nimport { GetFrameworkGeneric } from './frameworks'\nimport { Route } from './route'\nimport {\n  AnyAllRouteInfo,\n  AnyRouteInfo,\n  DefaultAllRouteInfo,\n  RouteInfo,\n} from './routeInfo'\nimport { AnyRouter, Router } from './router'\nimport { Expand } from './utils'\n\nexport interface RouteMatchStore<\n  TAllRouteInfo extends AnyAllRouteInfo = DefaultAllRouteInfo,\n  TRouteInfo extends AnyRouteInfo = RouteInfo,\n> {\n  routeSearch: TRouteInfo['searchSchema']\n  search: Expand<\n    TAllRouteInfo['fullSearchSchema'] & TRouteInfo['fullSearchSchema']\n  >\n  status: 'idle' | 'pending' | 'success' | 'error'\n  error?: unknown\n  updatedAt: number\n}\n\nconst componentTypes = [\n  'component',\n  'errorComponent',\n  'pendingComponent',\n] as const\n\nexport class RouteMatch<\n  TAllRouteInfo extends AnyAllRouteInfo = DefaultAllRouteInfo,\n  TRouteInfo extends AnyRouteInfo = RouteInfo,\n> {\n  route!: Route<TAllRouteInfo, TRouteInfo>\n  router!: Router<TAllRouteInfo['routeConfig'], TAllRouteInfo>\n  store!: Store<RouteMatchStore<TAllRouteInfo, TRouteInfo>>\n  id!: string\n  pathname!: string\n  params!: TRouteInfo['allParams']\n\n  component: GetFrameworkGeneric<'Component'>\n  errorComponent: GetFrameworkGeneric<'ErrorComponent'>\n  pendingComponent: GetFrameworkGeneric<'Component'>\n  abortController = new AbortController()\n  onLoaderDataListeners = new Set<() => void>()\n  parentMatch?: RouteMatch\n\n  __loadPromise?: Promise<void>\n  __onExit?:\n    | void\n    | ((matchContext: {\n        params: TRouteInfo['allParams']\n        search: TRouteInfo['fullSearchSchema']\n      }) => void)\n\n  constructor(\n    router: AnyRouter,\n    route: Route<TAllRouteInfo, TRouteInfo>,\n    opts: {\n      id: string\n      params: TRouteInfo['allParams']\n      pathname: string\n    },\n  ) {\n    Object.assign(this, {\n      route,\n      router,\n      id: opts.id,\n      pathname: opts.pathname,\n      params: opts.params,\n      store: new Store<RouteMatchStore<TAllRouteInfo, TRouteInfo>>({\n        updatedAt: 0,\n        routeSearch: {},\n        search: {} as any,\n        status: 'idle',\n      }),\n    })\n\n    if (!this.#hasLoaders()) {\n      this.store.setState((s) => ({\n        ...s,\n        status: 'success',\n      }))\n    }\n  }\n\n  cancel = () => {\n    this.abortController?.abort()\n  }\n\n  load = async (): Promise<void> => {\n    // If the match is invalid, errored or idle, trigger it to load\n    if (this.store.state.status !== 'pending') {\n      await this.fetch()\n    }\n  }\n\n  #latestId = ''\n\n  fetch = async (): Promise<void> => {\n    this.__loadPromise = Promise.resolve().then(async () => {\n      const loadId = '' + Date.now() + Math.random()\n      this.#latestId = loadId\n\n      const checkLatest = () => {\n        return loadId !== this.#latestId ? this.__loadPromise : undefined\n      }\n\n      let latestPromise\n\n      this.store.batch(() => {\n        // If the match was in an error state, set it\n        // to a loading state again. Otherwise, keep it\n        // as loading or resolved\n        if (this.store.state.status === 'idle') {\n          this.store.setState((s) => ({\n            ...s,\n            status: 'pending',\n          }))\n        }\n      })\n\n      const componentsPromise = (async () => {\n        // then run all component and data loaders in parallel\n        // For each component type, potentially load it asynchronously\n\n        await Promise.all(\n          componentTypes.map(async (type) => {\n            const component = this.route.options[type]\n\n            if (this[type]?.preload) {\n              this[type] = await this.router.options.loadComponent!(component)\n            }\n          }),\n        )\n      })()\n\n      const dataPromise = Promise.resolve().then(() => {\n        if (this.route.options.onLoad) {\n          return this.route.options.onLoad({\n            params: this.params,\n            search: this.store.state.search,\n            signal: this.abortController.signal,\n          })\n        }\n        return\n      })\n\n      try {\n        await componentsPromise\n        await dataPromise\n        if ((latestPromise = checkLatest())) return await latestPromise\n        this.store.setState((s) => ({\n          ...s,\n          error: undefined,\n          status: 'success',\n          updatedAt: Date.now(),\n        }))\n      } catch (err) {\n        this.store.setState((s) => ({\n          ...s,\n          error: err,\n          status: 'error',\n          updatedAt: Date.now(),\n        }))\n      } finally {\n        delete this.__loadPromise\n      }\n    })\n\n    return this.__loadPromise\n  }\n\n  #hasLoaders = () => {\n    return !!(\n      this.route.options.onLoad ||\n      componentTypes.some((d) => this.route.options[d]?.preload)\n    )\n  }\n\n  __setParentMatch = (parentMatch?: RouteMatch) => {\n    if (!this.parentMatch && parentMatch) {\n      this.parentMatch = parentMatch\n    }\n  }\n\n  __validate = () => {\n    // Validate the search params and stabilize them\n    const parentSearch =\n      this.parentMatch?.store.state.search ??\n      this.router.store.state.latestLocation.search\n\n    try {\n      const validator =\n        typeof this.route.options.validateSearch === 'object'\n          ? this.route.options.validateSearch.parse\n          : this.route.options.validateSearch\n\n      let nextSearch = validator?.(parentSearch) ?? {}\n\n      this.store.setState((s) => ({\n        ...s,\n        routeSearch: nextSearch,\n        search: {\n          ...parentSearch,\n          ...nextSearch,\n        } as any,\n      }))\n\n      componentTypes.map(async (type) => {\n        const component = this.route.options[type]\n\n        if (typeof this[type] !== 'function') {\n          this[type] = component\n        }\n      })\n    } catch (err: any) {\n      console.error(err)\n      const error = new (Error as any)('Invalid search params found', {\n        cause: err,\n      })\n      error.code = 'INVALID_SEARCH_PARAMS'\n\n      this.store.setState((s) => ({\n        ...s,\n        status: 'error',\n        error: error,\n      }))\n\n      // Do not proceed with loading the route\n      return\n    }\n  }\n}\n","import { decode, encode } from './qss'\nimport { AnySearchSchema } from './routeConfig'\n\nexport const defaultParseSearch = parseSearchWith(JSON.parse)\nexport const defaultStringifySearch = stringifySearchWith(JSON.stringify)\n\nexport function parseSearchWith(parser: (str: string) => any) {\n  return (searchStr: string): AnySearchSchema => {\n    if (searchStr.substring(0, 1) === '?') {\n      searchStr = searchStr.substring(1)\n    }\n\n    let query: Record<string, unknown> = decode(searchStr)\n\n    // Try to parse any query params that might be json\n    for (let key in query) {\n      const value = query[key]\n      if (typeof value === 'string') {\n        try {\n          query[key] = parser(value)\n        } catch (err) {\n          //\n        }\n      }\n    }\n\n    return query\n  }\n}\n\nexport function stringifySearchWith(stringify: (search: any) => string) {\n  return (search: Record<string, any>) => {\n    search = { ...search }\n\n    if (search) {\n      Object.keys(search).forEach((key) => {\n        const val = search[key]\n        if (typeof val === 'undefined' || val === undefined) {\n          delete search[key]\n        } else if (val && typeof val === 'object' && val !== null) {\n          try {\n            search[key] = stringify(val)\n          } catch (err) {\n            // silent\n          }\n        }\n      })\n    }\n\n    const searchStr = encode(search as Record<string, string>).toString()\n\n    return searchStr ? `?${searchStr}` : ''\n  }\n}\n","import { Store } from '@tanstack/store'\nimport invariant from 'tiny-invariant'\n\n//\n\nimport { GetFrameworkGeneric } from './frameworks'\n\nimport {\n  LinkInfo,\n  LinkOptions,\n  NavigateOptions,\n  ToOptions,\n  ValidFromPath,\n  ResolveRelativePath,\n} from './link'\nimport {\n  cleanPath,\n  interpolatePath,\n  joinPaths,\n  matchPathname,\n  resolvePath,\n  trimPath,\n} from './path'\nimport { AnyRoute, Route } from './route'\nimport {\n  AnyPathParams,\n  AnyRouteConfig,\n  AnySearchSchema,\n  LoaderContext,\n  RouteConfig,\n  SearchFilter,\n} from './routeConfig'\nimport {\n  AllRouteInfo,\n  AnyAllRouteInfo,\n  RouteInfo,\n  RoutesById,\n} from './routeInfo'\nimport { RouteMatch, RouteMatchStore } from './routeMatch'\nimport { defaultParseSearch, defaultStringifySearch } from './searchParams'\nimport {\n  functionalUpdate,\n  last,\n  NoInfer,\n  pick,\n  PickAsRequired,\n  PickRequired,\n  Timeout,\n  Updater,\n  replaceEqualDeep,\n} from './utils'\nimport {\n  createBrowserHistory,\n  createMemoryHistory,\n  RouterHistory,\n} from './history'\n\nexport interface RegisterRouter {\n  // router: Router\n}\n\nexport type AnyRouter = Router<any, any, any>\n\nexport type RegisteredRouter = RegisterRouter extends {\n  router: Router<infer TRouteConfig, infer TAllRouteInfo, infer TRouterContext>\n}\n  ? Router<TRouteConfig, TAllRouteInfo, TRouterContext>\n  : Router\n\nexport type RegisteredAllRouteInfo = RegisterRouter extends {\n  router: Router<infer TRouteConfig, infer TAllRouteInfo, infer TRouterContext>\n}\n  ? TAllRouteInfo\n  : AnyAllRouteInfo\n\nexport interface LocationState {}\n\nexport interface ParsedLocation<\n  TSearchObj extends AnySearchSchema = {},\n  TState extends LocationState = LocationState,\n> {\n  href: string\n  pathname: string\n  search: TSearchObj\n  searchStr: string\n  state: TState\n  hash: string\n  key?: string\n}\n\nexport interface FromLocation {\n  pathname: string\n  search?: unknown\n  key?: string\n  hash?: string\n}\n\nexport type SearchSerializer = (searchObj: Record<string, any>) => string\nexport type SearchParser = (searchStr: string) => Record<string, any>\nexport type FilterRoutesFn = <TRoute extends Route<any, RouteInfo>>(\n  routeConfigs: TRoute[],\n) => TRoute[]\n\nexport interface RouterOptions<\n  TRouteConfig extends AnyRouteConfig,\n  TRouterContext,\n> {\n  history?: RouterHistory\n  stringifySearch?: SearchSerializer\n  parseSearch?: SearchParser\n  filterRoutes?: FilterRoutesFn\n  defaultPreload?: false | 'intent'\n  defaultPreloadDelay?: number\n  defaultComponent?: GetFrameworkGeneric<'Component'>\n  defaultErrorComponent?: GetFrameworkGeneric<'ErrorComponent'>\n  defaultPendingComponent?: GetFrameworkGeneric<'Component'>\n  defaultLoaderMaxAge?: number\n  defaultLoaderGcMaxAge?: number\n  caseSensitive?: boolean\n  routeConfig?: TRouteConfig\n  basepath?: string\n  Router?: (router: AnyRouter) => void\n  createRoute?: (opts: { route: AnyRoute; router: AnyRouter }) => void\n  context?: TRouterContext\n  loadComponent?: (\n    component: GetFrameworkGeneric<'Component'>,\n  ) => Promise<GetFrameworkGeneric<'Component'>>\n  onRouteChange?: () => void\n  fetchServerDataFn?: FetchServerDataFn\n}\n\ntype FetchServerDataFn = (ctx: {\n  router: AnyRouter\n  routeMatch: RouteMatch\n}) => Promise<any>\n\nexport interface LoaderState<\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams extends AnyPathParams = {},\n> {\n  loadedAt: number\n  loaderContext: LoaderContext<TFullSearchSchema, TAllParams>\n}\n\nexport interface RouterStore<\n  TSearchObj extends AnySearchSchema = {},\n  TState extends LocationState = LocationState,\n> {\n  status: 'idle' | 'pending'\n  latestLocation: ParsedLocation<TSearchObj, TState>\n  currentMatches: RouteMatch[]\n  currentLocation: ParsedLocation<TSearchObj, TState>\n  pendingMatches?: RouteMatch[]\n  pendingLocation?: ParsedLocation<TSearchObj, TState>\n  lastUpdated: number\n}\n\nexport type ListenerFn = () => void\n\nexport interface BuildNextOptions {\n  to?: string | number | null\n  params?: true | Updater<unknown>\n  search?: true | Updater<unknown>\n  hash?: true | Updater<string>\n  state?: LocationState\n  key?: string\n  from?: string\n  fromCurrent?: boolean\n  __preSearchFilters?: SearchFilter<any>[]\n  __postSearchFilters?: SearchFilter<any>[]\n}\n\nexport type MatchCacheEntry = {\n  gc: number\n  match: RouteMatch\n}\n\nexport interface MatchLocation {\n  to?: string | number | null\n  fuzzy?: boolean\n  caseSensitive?: boolean\n  from?: string\n  fromCurrent?: boolean\n}\n\nexport interface MatchRouteOptions {\n  pending?: boolean\n  caseSensitive?: boolean\n  fuzzy?: boolean\n}\n\ntype LinkCurrentTargetElement = {\n  preloadTimeout?: null | ReturnType<typeof setTimeout>\n}\n\nexport interface DehydratedRouterState\n  extends Pick<\n    RouterStore,\n    'status' | 'latestLocation' | 'currentLocation' | 'lastUpdated'\n  > {\n  currentMatches: DehydratedRouteMatch[]\n}\n\nexport interface DehydratedRouter<TRouterContext = unknown> {\n  // location: Router['__location']\n  state: DehydratedRouterState\n  context: TRouterContext\n}\n\nexport type MatchCache = Record<string, MatchCacheEntry>\n\ninterface DehydratedRouteMatch {\n  id: string\n  state: Pick<RouteMatchStore<any, any>, 'status'>\n}\n\nexport interface RouterContext {}\n\nexport const defaultFetchServerDataFn: FetchServerDataFn = async ({\n  router,\n  routeMatch,\n}) => {\n  const next = router.buildNext({\n    to: '.',\n    search: (d: any) => ({\n      ...(d ?? {}),\n      __data: {\n        matchId: routeMatch.id,\n      },\n    }),\n  })\n\n  const res = await fetch(next.href, {\n    method: 'GET',\n    signal: routeMatch.abortController.signal,\n  })\n\n  if (res.ok) {\n    return res.json()\n  }\n\n  throw new Error('Failed to fetch match data')\n}\n\nexport class Router<\n  TRouteConfig extends AnyRouteConfig = RouteConfig,\n  TAllRouteInfo extends AnyAllRouteInfo = AllRouteInfo<TRouteConfig>,\n  TRouterContext = unknown,\n> {\n  types!: {\n    // Super secret internal stuff\n    RouteConfig: TRouteConfig\n    AllRouteInfo: TAllRouteInfo\n  }\n\n  options: PickAsRequired<\n    RouterOptions<TRouteConfig, TRouterContext>,\n    'stringifySearch' | 'parseSearch' | 'context'\n  >\n  history!: RouterHistory\n  #unsubHistory?: () => void\n  basepath: string\n  // __location: Location<TAllRouteInfo['fullSearchSchema']>\n  routeTree!: Route<TAllRouteInfo, RouteInfo>\n  routesById!: RoutesById<TAllRouteInfo>\n  navigateTimeout: undefined | Timeout\n  nextAction: undefined | 'push' | 'replace'\n  navigationPromise: undefined | Promise<void>\n\n  store: Store<RouterStore<TAllRouteInfo['fullSearchSchema']>>\n  startedLoadingAt = Date.now()\n  resolveNavigation = () => {}\n\n  constructor(options?: RouterOptions<TRouteConfig, TRouterContext>) {\n    this.options = {\n      defaultPreloadDelay: 50,\n      context: undefined!,\n      ...options,\n      stringifySearch: options?.stringifySearch ?? defaultStringifySearch,\n      parseSearch: options?.parseSearch ?? defaultParseSearch,\n      fetchServerDataFn: options?.fetchServerDataFn ?? defaultFetchServerDataFn,\n    }\n\n    this.store = new Store(getInitialRouterState())\n    this.basepath = ''\n\n    this.update(options)\n\n    // Allow frameworks to hook into the router creation\n    this.options.Router?.(this)\n  }\n\n  reset = () => {\n    this.store.setState((s) => Object.assign(s, getInitialRouterState()))\n  }\n\n  mount = () => {\n    // Mount only does anything on the client\n    if (!isServer) {\n      // If the router matches are empty, load the matches\n      if (!this.store.state.currentMatches.length) {\n        this.load()\n      }\n\n      const visibilityChangeEvent = 'visibilitychange'\n      const focusEvent = 'focus'\n\n      // addEventListener does not exist in React Native, but window does\n      // In the future, we might need to invert control here for more adapters\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (window.addEventListener) {\n        // Listen to visibilitychange and focus\n        window.addEventListener(visibilityChangeEvent, this.#onFocus, false)\n        window.addEventListener(focusEvent, this.#onFocus, false)\n      }\n\n      return () => {\n        if (window.removeEventListener) {\n          // Be sure to unsubscribe if a new handler is set\n\n          window.removeEventListener(visibilityChangeEvent, this.#onFocus)\n          window.removeEventListener(focusEvent, this.#onFocus)\n        }\n      }\n    }\n\n    return () => {}\n  }\n\n  update = <\n    TRouteConfig extends RouteConfig = RouteConfig,\n    TAllRouteInfo extends AnyAllRouteInfo = AllRouteInfo<TRouteConfig>,\n    TRouterContext = unknown,\n  >(\n    opts?: RouterOptions<TRouteConfig, TRouterContext>,\n  ): Router<TRouteConfig, TAllRouteInfo, TRouterContext> => {\n    Object.assign(this.options, opts)\n\n    if (\n      !this.history ||\n      (this.options.history && this.options.history !== this.history)\n    ) {\n      if (this.#unsubHistory) {\n        this.#unsubHistory()\n      }\n\n      this.history =\n        this.options.history ??\n        (isServer ? createMemoryHistory() : createBrowserHistory()!)\n\n      this.store.setState((s) => ({\n        ...s,\n        latestLocation: this.#parseLocation(),\n        currentLocation: s.latestLocation,\n      }))\n\n      this.#unsubHistory = this.history.listen(() => {\n        this.load(this.#parseLocation(this.store.state.latestLocation))\n      })\n    }\n\n    const { basepath, routeConfig } = this.options\n\n    this.basepath = `/${trimPath(basepath ?? '') ?? ''}`\n\n    if (routeConfig) {\n      this.routesById = {} as any\n      this.routeTree = this.#buildRouteTree(routeConfig)\n    }\n\n    return this as any\n  }\n\n  buildNext = (opts: BuildNextOptions) => {\n    const next = this.#buildLocation(opts)\n\n    const matches = this.matchRoutes(next.pathname)\n\n    const __preSearchFilters = matches\n      .map((match) => match.route.options.preSearchFilters ?? [])\n      .flat()\n      .filter(Boolean)\n\n    const __postSearchFilters = matches\n      .map((match) => match.route.options.postSearchFilters ?? [])\n      .flat()\n      .filter(Boolean)\n\n    return this.#buildLocation({\n      ...opts,\n      __preSearchFilters,\n      __postSearchFilters,\n    })\n  }\n\n  cancelMatches = () => {\n    ;[\n      ...this.store.state.currentMatches,\n      ...(this.store.state.pendingMatches || []),\n    ].forEach((match) => {\n      match.cancel()\n    })\n  }\n\n  load = async (next?: ParsedLocation) => {\n    let now = Date.now()\n    const startedAt = now\n    this.startedLoadingAt = startedAt\n\n    // Cancel any pending matches\n    this.cancelMatches()\n\n    let matches!: RouteMatch<any, any>[]\n\n    this.store.batch(() => {\n      if (next) {\n        // Ingest the new location\n        this.store.setState((s) => ({\n          ...s,\n          latestLocation: next,\n        }))\n      }\n\n      // Match the routes\n      matches = this.matchRoutes(this.store.state.latestLocation.pathname, {\n        strictParseParams: true,\n      })\n\n      this.store.setState((s) => ({\n        ...s,\n        status: 'pending',\n        pendingMatches: matches,\n        pendingLocation: this.store.state.latestLocation,\n      }))\n    })\n\n    // Load the matches\n    try {\n      await this.loadMatches(matches)\n    } catch (err: any) {\n      console.warn(err)\n      invariant(\n        false,\n        'Matches failed to load due to error above ☝️. Navigation cancelled!',\n      )\n    }\n\n    if (this.startedLoadingAt !== startedAt) {\n      // Ignore side-effects of outdated side-effects\n      return this.navigationPromise\n    }\n\n    const previousMatches = this.store.state.currentMatches\n\n    const exiting: RouteMatch[] = [],\n      staying: RouteMatch[] = []\n\n    previousMatches.forEach((d) => {\n      if (matches.find((dd) => dd.id === d.id)) {\n        staying.push(d)\n      } else {\n        exiting.push(d)\n      }\n    })\n\n    const entering = matches.filter((d) => {\n      return !previousMatches.find((dd) => dd.id === d.id)\n    })\n\n    now = Date.now()\n\n    exiting.forEach((d) => {\n      d.__onExit?.({\n        params: d.params,\n        search: d.store.state.routeSearch,\n      })\n\n      // Clear non-loading error states when match leaves\n      if (d.store.state.status === 'error') {\n        this.store.setState((s) => ({\n          ...s,\n          status: 'idle',\n          error: undefined,\n        }))\n      }\n    })\n\n    staying.forEach((d) => {\n      d.route.options.onTransition?.({\n        params: d.params,\n        search: d.store.state.routeSearch,\n      })\n    })\n\n    entering.forEach((d) => {\n      d.__onExit = d.route.options.onLoaded?.({\n        params: d.params,\n        search: d.store.state.search,\n      })\n      // delete this.store.state.matchCache[d.id] // TODO:\n    })\n\n    this.store.setState((s) => ({\n      ...s,\n      status: 'idle',\n      currentLocation: this.store.state.latestLocation,\n      currentMatches: matches,\n      pendingLocation: undefined,\n      pendingMatches: undefined,\n    }))\n\n    this.options.onRouteChange?.()\n\n    this.resolveNavigation()\n  }\n\n  getRoute = <TId extends keyof TAllRouteInfo['routeInfoById']>(\n    id: TId,\n  ): Route<TAllRouteInfo, TAllRouteInfo['routeInfoById'][TId]> => {\n    const route = this.routesById[id]\n\n    invariant(route, `Route with id \"${id as string}\" not found`)\n\n    return route\n  }\n\n  loadRoute = async (\n    navigateOpts: BuildNextOptions = this.store.state.latestLocation,\n  ): Promise<RouteMatch[]> => {\n    const next = this.buildNext(navigateOpts)\n    const matches = this.matchRoutes(next.pathname, {\n      strictParseParams: true,\n    })\n    await this.loadMatches(matches)\n    return matches\n  }\n\n  preloadRoute = async (\n    navigateOpts: BuildNextOptions = this.store.state.latestLocation,\n  ) => {\n    const next = this.buildNext(navigateOpts)\n    const matches = this.matchRoutes(next.pathname, {\n      strictParseParams: true,\n    })\n\n    await this.loadMatches(matches, {\n      preload: true,\n    })\n    return matches\n  }\n\n  matchRoutes = (pathname: string, opts?: { strictParseParams?: boolean }) => {\n    const matches: RouteMatch[] = []\n\n    if (!this.routeTree) {\n      return matches\n    }\n\n    const existingMatches = [\n      ...this.store.state.currentMatches,\n      ...(this.store.state.pendingMatches ?? []),\n    ]\n\n    const recurse = async (routes: Route<any, any>[]): Promise<void> => {\n      const parentMatch = last(matches)\n      let params = parentMatch?.params ?? {}\n\n      const filteredRoutes = this.options.filterRoutes?.(routes) ?? routes\n\n      let foundRoutes: Route[] = []\n\n      const findMatchInRoutes = (parentRoutes: Route[], routes: Route[]) => {\n        routes.some((route) => {\n          if (!route.path && route.childRoutes?.length) {\n            return findMatchInRoutes([...foundRoutes, route], route.childRoutes)\n          }\n\n          const fuzzy = !!(route.path !== '/' || route.childRoutes?.length)\n\n          const matchParams = matchPathname(this.basepath, pathname, {\n            to: route.fullPath,\n            fuzzy,\n            caseSensitive:\n              route.options.caseSensitive ?? this.options.caseSensitive,\n          })\n\n          if (matchParams) {\n            let parsedParams\n\n            try {\n              parsedParams =\n                route.options.parseParams?.(matchParams!) ?? matchParams\n            } catch (err) {\n              if (opts?.strictParseParams) {\n                throw err\n              }\n            }\n\n            params = {\n              ...params,\n              ...parsedParams,\n            }\n          }\n\n          if (!!matchParams) {\n            foundRoutes = [...parentRoutes, route]\n          }\n\n          return !!foundRoutes.length\n        })\n\n        return !!foundRoutes.length\n      }\n\n      findMatchInRoutes([], filteredRoutes)\n\n      if (!foundRoutes.length) {\n        return\n      }\n\n      foundRoutes.forEach((foundRoute) => {\n        const interpolatedPath = interpolatePath(foundRoute.path, params)\n        const matchId = interpolatePath(foundRoute.id, params, true)\n\n        const match =\n          existingMatches.find((d) => d.id === matchId) ||\n          // this.store.state.matchCache[matchId]?.match || // TODO:\n          new RouteMatch(this, foundRoute, {\n            id: matchId,\n            params,\n            pathname: joinPaths([this.basepath, interpolatedPath]),\n          })\n\n        matches.push(match)\n      })\n\n      const foundRoute = last(foundRoutes)!\n\n      if (foundRoute.childRoutes?.length) {\n        recurse(foundRoute.childRoutes)\n      }\n    }\n\n    recurse([this.routeTree])\n\n    linkMatches(matches)\n\n    return matches\n  }\n\n  loadMatches = async (\n    resolvedMatches: RouteMatch[],\n    loaderOpts?: { preload?: boolean },\n  ) => {\n    // this.cleanMatchCache()\n    resolvedMatches.forEach(async (match) => {\n      // Validate the match (loads search params etc)\n      match.__validate()\n    })\n\n    // Check each match middleware to see if the route can be accessed\n    await Promise.all(\n      resolvedMatches.map(async (match) => {\n        try {\n          await match.route.options.beforeLoad?.({\n            router: this as any,\n            match,\n          })\n        } catch (err) {\n          if (!loaderOpts?.preload) {\n            match.route.options.onLoadError?.(err)\n          }\n\n          throw err\n        }\n      }),\n    )\n\n    const matchPromises = resolvedMatches.map(async (match, index) => {\n      const prevMatch = resolvedMatches[(index = 1)]\n      const search = match.store.state.search as { __data?: any }\n\n      if (search.__data?.matchId && search.__data.matchId !== match.id) {\n        return\n      }\n\n      match.load()\n\n      if (match.store.state.status !== 'success' && match.__loadPromise) {\n        // Wait for the first sign of activity from the match\n        await match.__loadPromise\n      }\n\n      if (prevMatch) {\n        await prevMatch.__loadPromise\n      }\n    })\n\n    await Promise.all(matchPromises)\n  }\n\n  reload = () => {\n    this.navigate({\n      fromCurrent: true,\n      replace: true,\n      search: true,\n    } as any)\n  }\n\n  resolvePath = (from: string, path: string) => {\n    return resolvePath(this.basepath!, from, cleanPath(path))\n  }\n\n  navigate = async <\n    TFrom extends ValidFromPath<TAllRouteInfo> = '/',\n    TTo extends string = '.',\n  >({\n    from,\n    to = '.' as any,\n    search,\n    hash,\n    replace,\n    params,\n  }: NavigateOptions<TAllRouteInfo, TFrom, TTo>) => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n    const toString = String(to)\n    const fromString = typeof from === 'undefined' ? from : String(from)\n    let isExternal\n\n    try {\n      new URL(`${toString}`)\n      isExternal = true\n    } catch (e) {}\n\n    invariant(\n      !isExternal,\n      'Attempting to navigate to external url with this.navigate!',\n    )\n\n    return this.#commitLocation({\n      from: fromString,\n      to: toString,\n      search,\n      hash,\n      replace,\n      params,\n    })\n  }\n\n  matchRoute = <\n    TFrom extends ValidFromPath<TAllRouteInfo> = '/',\n    TTo extends string = '.',\n  >(\n    location: ToOptions<TAllRouteInfo, TFrom, TTo>,\n    opts?: MatchRouteOptions,\n  ):\n    | false\n    | TAllRouteInfo['routeInfoById'][ResolveRelativePath<\n        TFrom,\n        NoInfer<TTo>\n      >]['allParams'] => {\n    location = {\n      ...location,\n      to: location.to\n        ? this.resolvePath(location.from ?? '', location.to)\n        : undefined,\n    }\n\n    const next = this.buildNext(location)\n\n    if (opts?.pending) {\n      if (!this.store.state.pendingLocation) {\n        return false\n      }\n\n      return matchPathname(\n        this.basepath,\n        this.store.state.pendingLocation!.pathname,\n        {\n          ...opts,\n          to: next.pathname,\n        },\n      ) as any\n    }\n\n    return matchPathname(\n      this.basepath,\n      this.store.state.currentLocation.pathname,\n      {\n        ...opts,\n        to: next.pathname,\n      },\n    ) as any\n  }\n\n  buildLink = <\n    TFrom extends ValidFromPath<TAllRouteInfo> = '/',\n    TTo extends string = '.',\n  >({\n    from,\n    to = '.' as any,\n    search,\n    params,\n    hash,\n    target,\n    replace,\n    activeOptions,\n    preload,\n    preloadMaxAge: userPreloadMaxAge,\n    preloadGcMaxAge: userPreloadGcMaxAge,\n    preloadDelay: userPreloadDelay,\n    disabled,\n  }: LinkOptions<TAllRouteInfo, TFrom, TTo>): LinkInfo => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n\n    try {\n      new URL(`${to}`)\n      return {\n        type: 'external',\n        href: to,\n      }\n    } catch (e) {}\n\n    const nextOpts = {\n      from,\n      to,\n      search,\n      params,\n      hash,\n      replace,\n    }\n\n    const next = this.buildNext(nextOpts)\n\n    preload = preload ?? this.options.defaultPreload\n    const preloadDelay =\n      userPreloadDelay ?? this.options.defaultPreloadDelay ?? 0\n\n    // Compare path/hash for matches\n    const pathIsEqual =\n      this.store.state.currentLocation.pathname === next.pathname\n    const currentPathSplit =\n      this.store.state.currentLocation.pathname.split('/')\n    const nextPathSplit = next.pathname.split('/')\n    const pathIsFuzzyEqual = nextPathSplit.every(\n      (d, i) => d === currentPathSplit[i],\n    )\n    const hashIsEqual = this.store.state.currentLocation.hash === next.hash\n    // Combine the matches based on user options\n    const pathTest = activeOptions?.exact ? pathIsEqual : pathIsFuzzyEqual\n    const hashTest = activeOptions?.includeHash ? hashIsEqual : true\n\n    // The final \"active\" test\n    const isActive = pathTest && hashTest\n\n    // The click handler\n    const handleClick = (e: MouseEvent) => {\n      if (\n        !disabled &&\n        !isCtrlEvent(e) &&\n        !e.defaultPrevented &&\n        (!target || target === '_self') &&\n        e.button === 0\n      ) {\n        e.preventDefault()\n\n        // All is well? Navigate!\n        this.#commitLocation(nextOpts as any)\n      }\n    }\n\n    // The click handler\n    const handleFocus = (e: MouseEvent) => {\n      if (preload) {\n        this.preloadRoute(nextOpts).catch((err) => {\n          console.warn(err)\n          console.warn('Error preloading route! ☝️')\n        })\n      }\n    }\n\n    const handleEnter = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (preload) {\n        if (target.preloadTimeout) {\n          return\n        }\n\n        target.preloadTimeout = setTimeout(() => {\n          target.preloadTimeout = null\n          this.preloadRoute(nextOpts).catch((err) => {\n            console.warn(err)\n            console.warn('Error preloading route! ☝️')\n          })\n        }, preloadDelay)\n      }\n    }\n\n    const handleLeave = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (target.preloadTimeout) {\n        clearTimeout(target.preloadTimeout)\n        target.preloadTimeout = null\n      }\n    }\n\n    return {\n      type: 'internal',\n      next,\n      handleFocus,\n      handleClick,\n      handleEnter,\n      handleLeave,\n      isActive,\n      disabled,\n    }\n  }\n\n  dehydrate = (): DehydratedRouter<TRouterContext> => {\n    return {\n      state: {\n        ...pick(this.store.state, [\n          'latestLocation',\n          'currentLocation',\n          'status',\n          'lastUpdated',\n        ]),\n        currentMatches: this.store.state.currentMatches.map((match) => ({\n          id: match.id,\n          state: {\n            ...pick(match.store.state, ['status']),\n          },\n        })),\n      },\n      context: this.options.context as TRouterContext,\n    }\n  }\n\n  hydrate = (dehydratedRouter: DehydratedRouter<TRouterContext>) => {\n    this.store.setState((s) => {\n      this.options.context = dehydratedRouter.context\n\n      // Match the routes\n      const currentMatches = this.matchRoutes(\n        dehydratedRouter.state.latestLocation.pathname,\n        {\n          strictParseParams: true,\n        },\n      )\n\n      currentMatches.forEach((match, index) => {\n        const dehydratedMatch = dehydratedRouter.state.currentMatches[index]\n        invariant(\n          dehydratedMatch && dehydratedMatch.id === match.id,\n          'Oh no! There was a hydration mismatch when attempting to hydrate the state of the router! 😬',\n        )\n        match.store.setState((s) => ({\n          ...s,\n          ...dehydratedMatch.state,\n        }))\n      })\n\n      currentMatches.forEach((match) => match.__validate())\n\n      return {\n        ...s,\n        ...dehydratedRouter.state,\n        currentMatches,\n      }\n    })\n  }\n\n  #buildRouteTree = (rootRouteConfig: RouteConfig) => {\n    const recurseRoutes = (\n      routeConfigs: RouteConfig[],\n      parent?: Route<TAllRouteInfo, any, any>,\n    ): Route<TAllRouteInfo, any, any>[] => {\n      return routeConfigs.map((routeConfig, i) => {\n        const routeOptions = routeConfig.options\n        const route = new Route(routeConfig, routeOptions, i, parent, this)\n        const existingRoute = (this.routesById as any)[route.id]\n\n        if (existingRoute) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\n              `Duplicate routes found with id: ${String(route.id)}`,\n              this.routesById,\n              route,\n            )\n          }\n          throw new Error()\n        }\n\n        ;(this.routesById as any)[route.id] = route\n\n        const children = routeConfig.children as RouteConfig[]\n\n        route.childRoutes = children.length\n          ? recurseRoutes(children, route)\n          : undefined\n\n        return route\n      })\n    }\n\n    const routes = recurseRoutes([rootRouteConfig])\n\n    return routes[0]!\n  }\n\n  #parseLocation = (previousLocation?: ParsedLocation): ParsedLocation => {\n    let { pathname, search, hash, state } = this.history.location\n\n    const parsedSearch = this.options.parseSearch(search)\n\n    return {\n      pathname: pathname,\n      searchStr: search,\n      search: replaceEqualDeep(previousLocation?.search, parsedSearch),\n      hash: hash.split('#').reverse()[0] ?? '',\n      href: `${pathname}${search}${hash}`,\n      state: state as LocationState,\n      key: state?.key || '__init__',\n    }\n  }\n\n  #onFocus = () => {\n    this.load()\n  }\n\n  #buildLocation = (dest: BuildNextOptions = {}): ParsedLocation => {\n    const fromPathname = dest.fromCurrent\n      ? this.store.state.latestLocation.pathname\n      : dest.from ?? this.store.state.latestLocation.pathname\n\n    let pathname = resolvePath(\n      this.basepath ?? '/',\n      fromPathname,\n      `${dest.to ?? '.'}`,\n    )\n\n    const fromMatches = this.matchRoutes(\n      this.store.state.latestLocation.pathname,\n      {\n        strictParseParams: true,\n      },\n    )\n\n    const toMatches = this.matchRoutes(pathname)\n\n    const prevParams = { ...last(fromMatches)?.params }\n\n    let nextParams =\n      (dest.params ?? true) === true\n        ? prevParams\n        : functionalUpdate(dest.params!, prevParams)\n\n    if (nextParams) {\n      toMatches\n        .map((d) => d.route.options.stringifyParams)\n        .filter(Boolean)\n        .forEach((fn) => {\n          Object.assign({}, nextParams!, fn!(nextParams!))\n        })\n    }\n\n    pathname = interpolatePath(pathname, nextParams ?? {})\n\n    // Pre filters first\n    const preFilteredSearch = dest.__preSearchFilters?.length\n      ? dest.__preSearchFilters?.reduce(\n          (prev, next) => next(prev),\n          this.store.state.latestLocation.search,\n        )\n      : this.store.state.latestLocation.search\n\n    // Then the link/navigate function\n    const destSearch =\n      dest.search === true\n        ? preFilteredSearch // Preserve resolvedFrom true\n        : dest.search\n        ? functionalUpdate(dest.search, preFilteredSearch) ?? {} // Updater\n        : dest.__preSearchFilters?.length\n        ? preFilteredSearch // Preserve resolvedFrom filters\n        : {}\n\n    // Then post filters\n    const postFilteredSearch = dest.__postSearchFilters?.length\n      ? dest.__postSearchFilters.reduce((prev, next) => next(prev), destSearch)\n      : destSearch\n\n    const search = replaceEqualDeep(\n      this.store.state.latestLocation.search,\n      postFilteredSearch,\n    )\n\n    const searchStr = this.options.stringifySearch(search)\n    let hash =\n      dest.hash === true\n        ? this.store.state.latestLocation.hash\n        : functionalUpdate(dest.hash!, this.store.state.latestLocation.hash)\n    hash = hash ? `#${hash}` : ''\n\n    return {\n      pathname,\n      search,\n      searchStr,\n      state: this.store.state.latestLocation.state,\n      hash,\n      href: `${pathname}${searchStr}${hash}`,\n      key: dest.key,\n    }\n  }\n\n  #commitLocation = (location: BuildNextOptions & { replace?: boolean }) => {\n    const next = this.buildNext(location)\n    const id = '' + Date.now() + Math.random()\n\n    if (this.navigateTimeout) clearTimeout(this.navigateTimeout)\n\n    let nextAction: 'push' | 'replace' = 'replace'\n\n    if (!location.replace) {\n      nextAction = 'push'\n    }\n\n    const isSameUrl = this.store.state.latestLocation.href === next.href\n\n    if (isSameUrl && !next.key) {\n      nextAction = 'replace'\n    }\n\n    const href = `${next.pathname}${next.searchStr}${\n      next.hash ? `#${next.hash}` : ''\n    }`\n\n    this.history[nextAction === 'push' ? 'push' : 'replace'](href, {\n      id,\n      ...next.state,\n    })\n\n    // this.load(this.#parseLocation(this.store.state.latestLocation))\n\n    return (this.navigationPromise = new Promise((resolve) => {\n      const previousNavigationResolve = this.resolveNavigation\n\n      this.resolveNavigation = () => {\n        previousNavigationResolve()\n        resolve()\n      }\n    }))\n  }\n}\n\n// Detect if we're in the DOM\nconst isServer = typeof window === 'undefined' || !window.document.createElement\n\nfunction getInitialRouterState(): RouterStore {\n  return {\n    status: 'idle',\n    latestLocation: null!,\n    currentLocation: null!,\n    currentMatches: [],\n    lastUpdated: Date.now(),\n    // matchCache: {}, // TODO:\n    // get isFetching() {\n    //   return (\n    //     this.status === 'loading' ||\n    //     this.currentMatches.some((d) => d.store.state.isFetching)\n    //   )\n    // },\n    // get isPreloading() {\n    //   return Object.values(this.matchCache).some(\n    //     (d) =>\n    //       d.match.store.state.isFetching &&\n    //       !this.currentMatches.find((dd) => dd.id === d.match.id),\n    //   )\n    // },\n  }\n}\n\nfunction isCtrlEvent(e: MouseEvent) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n}\n\nfunction linkMatches(matches: RouteMatch<any, any>[]) {\n  matches.forEach((match, index) => {\n    const parent = matches[index - 1]\n\n    if (parent) {\n      match.__setParentMatch(parent)\n    }\n  })\n}\n"],"names":["popStateEvent","createHistory","opts","currentLocation","getLocation","unsub","listeners","Set","onUpdate","forEach","listener","location","listen","cb","size","add","delete","push","path","state","pushState","replace","replaceState","go","index","back","forward","createBrowserHistory","getHref","window","pathname","hash","search","createHref","parseLocation","history","addEventListener","removeEventListener","key","createRandomKey","n","createHashHistory","substring","createMemoryHistory","initialEntries","entries","initialIndex","length","currentState","Math","min","href","hashIndex","indexOf","searchIndex","random","toString","last","arr","warning","cond","message","console","warn","Error","isFunction","d","functionalUpdate","updater","previous","pick","parent","keys","reduce","obj","replaceEqualDeep","prev","_next","next","array","Array","isArray","isPlainObject","prevSize","Object","nextItems","nextSize","copy","equalItems","i","o","hasObjectPrototype","ctor","constructor","prot","prototype","hasOwnProperty","call","joinPaths","paths","cleanPath","filter","Boolean","join","trimPathLeft","trimPathRight","trimPath","resolvePath","basepath","base","to","RegExp","baseSegments","parsePathname","toSegments","toSegment","value","pop","joined","map","segments","slice","type","split","part","startsWith","charAt","interpolatePath","params","leaveWildcard","interpolatedPathSegments","segment","matchPathname","currentPathname","matchLocation","pathParams","matchByPath","from","undefined","routeSegments","isMatch","max","baseSegment","routeSegment","isLastRouteSegment","isLastBaseSegment","caseSensitive","toLowerCase","fuzzy","encode","pfx","k","tmp","str","encodeURIComponent","toValue","mix","decodeURIComponent","decode","out","shift","concat","Route","routeConfig","options","originalIndex","router","assign","getRouter","childRoutes","getParentRoute","createRoute","route","rootRouteId","createRouteConfig","children","isRoot","parentId","parentPath","routeId","id","fullPath","addChildren","childOptions","generate","invariant","componentTypes","RouteMatch","abortController","AbortController","onLoaderDataListeners","store","Store","updatedAt","routeSearch","status","setState","s","cancel","abort","load","fetch","__loadPromise","Promise","resolve","then","loadId","Date","now","checkLatest","latestPromise","batch","componentsPromise","all","component","preload","loadComponent","dataPromise","onLoad","signal","error","err","some","__setParentMatch","parentMatch","__validate","parentSearch","latestLocation","validator","validateSearch","parse","nextSearch","cause","code","defaultParseSearch","parseSearchWith","JSON","defaultStringifySearch","stringifySearchWith","stringify","parser","searchStr","query","val","defaultFetchServerDataFn","routeMatch","buildNext","__data","matchId","res","method","ok","json","Router","startedLoadingAt","resolveNavigation","defaultPreloadDelay","context","stringifySearch","parseSearch","fetchServerDataFn","getInitialRouterState","update","reset","mount","isServer","currentMatches","visibilityChangeEvent","focusEvent","routesById","routeTree","matches","matchRoutes","__preSearchFilters","match","preSearchFilters","flat","__postSearchFilters","postSearchFilters","cancelMatches","pendingMatches","startedAt","strictParseParams","pendingLocation","loadMatches","navigationPromise","previousMatches","exiting","staying","find","dd","entering","__onExit","onTransition","onLoaded","onRouteChange","getRoute","loadRoute","navigateOpts","preloadRoute","existingMatches","recurse","routes","filteredRoutes","filterRoutes","foundRoutes","findMatchInRoutes","parentRoutes","matchParams","parsedParams","parseParams","foundRoute","interpolatedPath","linkMatches","resolvedMatches","loaderOpts","beforeLoad","onLoadError","matchPromises","prevMatch","reload","navigate","fromCurrent","String","fromString","isExternal","URL","e","matchRoute","pending","buildLink","target","activeOptions","preloadMaxAge","userPreloadMaxAge","preloadGcMaxAge","userPreloadGcMaxAge","preloadDelay","userPreloadDelay","disabled","nextOpts","defaultPreload","pathIsEqual","currentPathSplit","nextPathSplit","pathIsFuzzyEqual","every","hashIsEqual","pathTest","exact","hashTest","includeHash","isActive","handleClick","isCtrlEvent","defaultPrevented","button","preventDefault","handleFocus","catch","handleEnter","preloadTimeout","setTimeout","handleLeave","clearTimeout","dehydrate","hydrate","dehydratedRouter","dehydratedMatch","rootRouteConfig","recurseRoutes","routeConfigs","routeOptions","existingRoute","previousLocation","parsedSearch","reverse","dest","fromPathname","fromMatches","toMatches","prevParams","nextParams","stringifyParams","fn","preFilteredSearch","destSearch","postFilteredSearch","navigateTimeout","nextAction","isSameUrl","previousNavigationResolve","document","createElement","lastUpdated","metaKey","altKey","ctrlKey","shiftKey"],"mappings":"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"}